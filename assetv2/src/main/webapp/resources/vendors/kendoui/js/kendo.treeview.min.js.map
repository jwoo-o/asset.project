{"version":3,"sources":["kendo.treeview.js"],"names":["f","define","$","undefined","contentChild","filter","node","result","children","length","templateNoWith","code","kendo","template","useWithBlock","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","closest","NODE","parentNode","group","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","data","moveContents","container","tmp","nodeName","toLowerCase","nextSibling","nodeType","nodeValue","trim","spriteRe","test","className","insertBefore","firstChild","appendChild","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","appendTo","append","eq","addClass","TreeView","subGroup","nodeContents","nodeIcon","window","ui","extend","isArray","Widget","HierarchicalDataSource","proxy","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","EXPAND","CHANGE","ERROR","CHECKED","INDETERMINATE","COLLAPSE","DRAGSTART","DRAG","DROP","DRAGEND","DATABOUND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","VISIBLE","STRING","ARIALABEL","ARIASELECTED","ARIADISABLED","DISABLED","bindings","text","url","spriteCssClass","imageUrl","isJQueryInstance","obj","jQuery","isDomElement","o","HTMLElement","DataBoundWidget","init","element","options","list","that","inferred","hasDataSource","loadOnDemand","prototype","call","_animation","_accessors","_templates","root","_wrapper","_group","_tabindex","attr","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","checkChildren","updateIndeterminate","id","_ariaId","format","notify","clickableItems","MOUSEENTER","on","e","preventDefault","removeClass","_click","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_checkboxLabelClick","_retryRequest","target","focus","previousSibling","prop","trigger","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","checked","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","widget","enabled","dragAndDrop","dragging","HierarchicalDragAndDrop","reorderable","$angular","autoScroll","allowedContainers","itemSelector","hintText","_hintText","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","_checkboxes","wrapperCssClass","firstLevel","cssClass","groupLength","textClass","isLink","selected","toggleButtonClass","groupAttributes","attributes","groupCssClass","itemContent","itemElement","loading","retry","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","bind","_unbindDataSource","unbind","silentRead","recursiveRead","_initChildren","fields","field","create","events","name","duration","messages","requestFailed","dataTextField","textField","fieldName","fieldBindings","count","map","x","expr","join","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","nodes","set","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","isChecked","currentTarget","toggle","_clickTarget","current","_focusable","select","clickTarget","support","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","_enabled","skipSelf","wrapperRe","itemRe","nextParent","_expanded","_previousVisible","lastChild","prev","key","keyCode","focused","rtl","isRtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToSelect","delay","selectedNode","_getSelectedNode","_match","String","fromCharCode","clearTimeout","_matchTimer","setTimeout","_matchNextByText","Array","startIndex","shouldNavigate","contents","href","wrapperClasses","wrap","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","textWrap","_checkboxAria","_processNodes","callback","getByUid","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","angular","elements","get","_renderGroup","hasChildren","_updateNodes","setCheckedState","not","nodeWrapper","isCollapsed","context","render","findByUid","toggleClass","end","html","_toggle","removeAttr","ns","_appendItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","_angularItems","bubble","action","level","_remove","_loaded","load","retryHtml","loaded","enable","arguments","_current","direction","height","kendoStop","kendoAnimate","reset","complete","showProgress","loadingText","Math","min","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","ObservableArray","toJSON","splice","apply","concat","success","loadModel","add","max","inserted","done","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","proceed","nodeIds","shift","then","slice","_parentIds","parents","unshift","expandTo","Node","r","renderItems","len","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.treeview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.treeview', [\n        'kendo.data',\n        'kendo.treeview.draganddrop'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'treeview',\n        name: 'TreeView',\n        category: 'web',\n        description: 'The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.',\n        depends: ['data'],\n        features: [{\n                id: 'treeview-dragging',\n                name: 'Drag & Drop',\n                description: 'Support for drag & drop',\n                depends: ['treeview.draganddrop']\n            }]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, data = kendo.data, extend = $.extend, template = kendo.template, isArray = $.isArray, Widget = ui.Widget, HierarchicalDataSource = data.HierarchicalDataSource, proxy = $.proxy, keys = kendo.keys, NS = '.kendoTreeView', TEMP_NS = '.kendoTreeViewTemp', SELECT = 'select', CHECK = 'check', NAVIGATE = 'navigate', EXPAND = 'expand', CHANGE = 'change', ERROR = 'error', CHECKED = 'checked', INDETERMINATE = 'indeterminate', COLLAPSE = 'collapse', DRAGSTART = 'dragstart', DRAG = 'drag', DROP = 'drop', DRAGEND = 'dragend', DATABOUND = 'dataBound', CLICK = 'click', UNDEFINED = 'undefined', KSTATEHOVER = 'k-state-hover', KTREEVIEW = 'k-treeview', VISIBLE = ':visible', NODE = '.k-item', STRING = 'string', ARIALABEL = 'aria-label', ARIASELECTED = 'aria-selected', ARIADISABLED = 'aria-disabled', DISABLED = 'k-state-disabled', TreeView, subGroup, nodeContents, nodeIcon, spriteRe, bindings = {\n                text: 'dataTextField',\n                url: 'dataUrlField',\n                spriteCssClass: 'dataSpriteCssClassField',\n                imageUrl: 'dataImageUrlField'\n            }, isJQueryInstance = function (obj) {\n                return obj instanceof kendo.jQuery || obj instanceof window.jQuery;\n            }, isDomElement = function (o) {\n                return typeof HTMLElement === 'object' ? o instanceof HTMLElement : o && typeof o === 'object' && o.nodeType === 1 && typeof o.nodeName === STRING;\n            };\n        function contentChild(filter) {\n            return function (node) {\n                var result = node.children('.k-animation-container');\n                if (!result.length) {\n                    result = node;\n                }\n                return result.children(filter);\n            };\n        }\n        function templateNoWith(code) {\n            return kendo.template(code, { useWithBlock: false });\n        }\n        subGroup = contentChild('.k-group');\n        nodeContents = contentChild('.k-group,.k-content');\n        nodeIcon = function (node) {\n            return node.children('div').children('.k-icon');\n        };\n        function checkboxes(node) {\n            return node.find('> div .k-checkbox-wrapper [type=checkbox]');\n        }\n        function insertAction(indexOffset) {\n            return function (nodeData, referenceNode) {\n                referenceNode = referenceNode.closest(NODE);\n                var group = referenceNode.parent(), parentNode;\n                if (group.parent().is('li')) {\n                    parentNode = group.parent();\n                }\n                return this._dataSourceMove(nodeData, group, parentNode, function (dataSource, model) {\n                    var referenceItem = this.dataItem(referenceNode);\n                    var referenceNodeIndex = referenceItem ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n                    return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n                });\n            };\n        }\n        spriteRe = /k-sprite/;\n        function moveContents(node, container) {\n            var tmp;\n            while (node && node.nodeName.toLowerCase() != 'ul') {\n                tmp = node;\n                node = node.nextSibling;\n                if (tmp.nodeType == 3) {\n                    tmp.nodeValue = $.trim(tmp.nodeValue);\n                }\n                if (spriteRe.test(tmp.className)) {\n                    container.insertBefore(tmp, container.firstChild);\n                } else {\n                    container.appendChild(tmp);\n                }\n            }\n        }\n        function updateNodeHtml(node) {\n            var wrapper = node.children('div'), group = node.children('ul'), toggleButton = wrapper.children('.k-icon'), checkbox = node.children(':checkbox'), innerWrapper = wrapper.children('.k-in');\n            if (node.hasClass('k-treeview')) {\n                return;\n            }\n            if (!wrapper.length) {\n                wrapper = $('<div />').prependTo(node);\n            }\n            if (!toggleButton.length && group.length) {\n                toggleButton = $('<span class=\\'k-icon\\' />').prependTo(wrapper);\n            } else if (!group.length || !group.children().length) {\n                toggleButton.remove();\n                group.remove();\n            }\n            if (checkbox.length) {\n                $('<span class=\\'k-checkbox-wrapper\\' />').appendTo(wrapper).append(checkbox);\n            }\n            if (!innerWrapper.length) {\n                innerWrapper = node.children('a').eq(0).addClass('k-in k-link');\n                if (!innerWrapper.length) {\n                    innerWrapper = $('<span class=\\'k-in\\' />');\n                }\n                innerWrapper.appendTo(wrapper);\n                if (wrapper.length) {\n                    moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n                }\n            }\n        }\n        TreeView = kendo.ui.DataBoundWidget.extend({\n            init: function (element, options) {\n                var that = this, inferred = false, hasDataSource = options && !!options.dataSource, list;\n                if (isArray(options)) {\n                    options = { dataSource: options };\n                }\n                if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                    options.loadOnDemand = false;\n                }\n                Widget.prototype.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n                list = element.is('ul') && element || element.hasClass(KTREEVIEW) && element.children('ul');\n                inferred = !hasDataSource && list.length;\n                if (inferred) {\n                    options.dataSource.list = list;\n                }\n                that._animation();\n                that._accessors();\n                that._templates();\n                if (!element.hasClass(KTREEVIEW)) {\n                    that._wrapper();\n                    if (list) {\n                        that.root = element;\n                        that._group(that.wrapper);\n                    }\n                } else {\n                    that.wrapper = element;\n                    that.root = element.children('ul').eq(0);\n                }\n                that._tabindex();\n                that.root.attr('role', 'tree');\n                that._dataSource(inferred);\n                that._attachEvents();\n                that._dragging();\n                if (!inferred) {\n                    if (options.autoBind) {\n                        that._progress(true);\n                        that.dataSource.fetch();\n                    }\n                } else {\n                    that._syncHtmlAndDataSource();\n                }\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    that.updateIndeterminate();\n                }\n                if (that.element[0].id) {\n                    that._ariaId = kendo.format('{0}_tv_active', that.element[0].id);\n                }\n                kendo.notify(that);\n            },\n            _attachEvents: function () {\n                var that = this, clickableItems = '.k-in:not(.k-state-selected,.k-state-disabled)', MOUSEENTER = 'mouseenter';\n                that.wrapper.on(MOUSEENTER + NS, '.k-in.k-state-selected', function (e) {\n                    e.preventDefault();\n                }).on(MOUSEENTER + NS, clickableItems, function () {\n                    $(this).addClass(KSTATEHOVER);\n                }).on('mouseleave' + NS, clickableItems, function () {\n                    $(this).removeClass(KSTATEHOVER);\n                }).on(CLICK + NS, clickableItems, proxy(that._click, that)).on('dblclick' + NS, '.k-in:not(.k-state-disabled)', proxy(that._toggleButtonClick, that)).on(CLICK + NS, '.k-i-expand,.k-i-collapse', proxy(that._toggleButtonClick, that)).on('keydown' + NS, proxy(that._keydown, that)).on('keypress' + NS, proxy(that._keypress, that)).on('focus' + NS, proxy(that._focus, that)).on('blur' + NS, proxy(that._blur, that)).on('mousedown' + NS, '.k-in,.k-checkbox-wrapper :checkbox,.k-i-expand,.k-i-collapse', proxy(that._mousedown, that)).on('change' + NS, '.k-checkbox-wrapper :checkbox', proxy(that._checkboxChange, that)).on('click' + NS, '.checkbox-span', proxy(that._checkboxLabelClick, that)).on('click' + NS, '.k-request-retry', proxy(that._retryRequest, that)).on('click' + NS, '.k-link.k-state-disabled', function (e) {\n                    e.preventDefault();\n                }).on('click' + NS, function (e) {\n                    if (!$(e.target).is(':kendoFocusable')) {\n                        that.focus();\n                    }\n                });\n            },\n            _checkboxLabelClick: function (e) {\n                var checkbox = $(e.target.previousSibling);\n                if (checkbox.is('[disabled]')) {\n                    return;\n                }\n                checkbox.prop('checked', !checkbox.prop('checked'));\n                checkbox.trigger('change');\n            },\n            _syncHtmlAndDataSource: function (root, dataSource) {\n                root = root || this.root;\n                dataSource = dataSource || this.dataSource;\n                var data = dataSource.view(), uidAttr = kendo.attr('uid'), expandedAttr = kendo.attr('expanded'), checkboxesEnabled = this.options.checkboxes, items = root.children('li'), i, item, dataItem, uid, itemCheckbox;\n                for (i = 0; i < items.length; i++) {\n                    dataItem = data[i];\n                    uid = dataItem.uid;\n                    item = items.eq(i);\n                    item.attr('role', 'treeitem').attr(uidAttr, uid).attr(ARIASELECTED, item.hasClass('k-state-selected'));\n                    dataItem.expanded = item.attr(expandedAttr) === 'true';\n                    if (checkboxesEnabled) {\n                        itemCheckbox = checkboxes(item);\n                        dataItem.checked = itemCheckbox.prop(CHECKED);\n                        itemCheckbox.attr('id', '_' + uid);\n                        itemCheckbox.next('.k-checkbox-label').attr('for', '_' + uid);\n                    }\n                    this._syncHtmlAndDataSource(item.children('ul'), dataItem.children);\n                }\n            },\n            _animation: function () {\n                var options = this.options, animationOptions = options.animation, hasCollapseAnimation = animationOptions.collapse && 'effects' in animationOptions.collapse, collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n                if (animationOptions === false) {\n                    animationOptions = {\n                        expand: { effects: {} },\n                        collapse: {\n                            hide: true,\n                            effects: {}\n                        }\n                    };\n                }\n                animationOptions.collapse = extend(collapse, { hide: true });\n                options.animation = animationOptions;\n            },\n            _dragging: function () {\n                var enabled = this.options.dragAndDrop;\n                var dragging = this.dragging;\n                if (enabled && !dragging) {\n                    var widget = this;\n                    this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                        reorderable: true,\n                        $angular: this.options.$angular,\n                        autoScroll: this.options.autoScroll,\n                        filter: 'div:not(.k-state-disabled) .k-in',\n                        allowedContainers: '.k-treeview',\n                        itemSelector: '.k-treeview .k-item',\n                        hintText: proxy(this._hintText, this),\n                        contains: function (source, destination) {\n                            return $.contains(source, destination);\n                        },\n                        dropHintContainer: function (item) {\n                            return item;\n                        },\n                        itemFromTarget: function (target) {\n                            var item = target.closest('.k-top,.k-mid,.k-bot');\n                            return {\n                                item: item,\n                                content: target.closest('.k-in'),\n                                first: item.hasClass('k-top'),\n                                last: item.hasClass('k-bot')\n                            };\n                        },\n                        dropPositionFrom: function (dropHint) {\n                            return dropHint.prevAll('.k-in').length > 0 ? 'after' : 'before';\n                        },\n                        dragstart: function (source) {\n                            return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                        },\n                        drag: function (options) {\n                            widget.trigger(DRAG, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source[0],\n                                dropTarget: options.target[0],\n                                pageY: options.pageY,\n                                pageX: options.pageX,\n                                statusClass: options.status,\n                                setStatusClass: options.setStatus\n                            });\n                        },\n                        drop: function (options) {\n                            var dropTarget = $(options.dropTarget);\n                            var navigationTarget = dropTarget.closest('a');\n                            if (navigationTarget && navigationTarget.attr('href')) {\n                                widget._tempPreventNavigation(navigationTarget);\n                            }\n                            return widget.trigger(DROP, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source,\n                                destinationNode: options.destination,\n                                valid: options.valid,\n                                setValid: function (state) {\n                                    this.valid = state;\n                                    options.setValid(state);\n                                },\n                                dropTarget: options.dropTarget,\n                                dropPosition: options.position\n                            });\n                        },\n                        dragend: function (options) {\n                            var source = options.source;\n                            var destination = options.destination;\n                            var position = options.position;\n                            function triggerDragEnd(source) {\n                                if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                    widget.updateIndeterminate();\n                                }\n                                widget.trigger(DRAGEND, {\n                                    originalEvent: options.originalEvent,\n                                    sourceNode: source && source[0],\n                                    destinationNode: destination[0],\n                                    dropPosition: position\n                                });\n                            }\n                            if (position == 'over') {\n                                widget.append(source, destination, triggerDragEnd);\n                            } else {\n                                if (position == 'before') {\n                                    source = widget.insertBefore(source, destination);\n                                } else if (position == 'after') {\n                                    source = widget.insertAfter(source, destination);\n                                }\n                                triggerDragEnd(source);\n                            }\n                        }\n                    });\n                } else if (!enabled && dragging) {\n                    dragging.destroy();\n                    this.dragging = null;\n                }\n            },\n            _tempPreventNavigation: function (node) {\n                node.on(CLICK + NS + TEMP_NS, function (ev) {\n                    ev.preventDefault();\n                    node.off(CLICK + NS + TEMP_NS);\n                });\n            },\n            _hintText: function (node) {\n                return this.templates.dragClue({\n                    item: this.dataItem(node),\n                    treeview: this.options\n                });\n            },\n            _templates: function () {\n                var that = this, options = that.options, fieldAccessor = proxy(that._fieldAccessor, that);\n                if (options.template && typeof options.template == STRING) {\n                    options.template = template(options.template);\n                } else if (!options.template) {\n                    options.template = templateNoWith('# var text = ' + fieldAccessor('text') + '(data.item); #' + '# if (typeof data.item.encoded != \\'undefined\\' && data.item.encoded === false) {#' + '#= text #' + '# } else { #' + '#: text #' + '# } #');\n                }\n                that._checkboxes();\n                that.templates = {\n                    wrapperCssClass: function (group, item) {\n                        var result = 'k-item', index = item.index;\n                        if (group.firstLevel && index === 0) {\n                            result += ' k-first';\n                        }\n                        if (index == group.length - 1) {\n                            result += ' k-last';\n                        }\n                        return result;\n                    },\n                    cssClass: function (group, item) {\n                        var result = '', index = item.index, groupLength = group.length - 1;\n                        if (group.firstLevel && index === 0) {\n                            result += 'k-top ';\n                        }\n                        if (index === 0 && index != groupLength) {\n                            result += 'k-top';\n                        } else if (index == groupLength) {\n                            result += 'k-bot';\n                        } else {\n                            result += 'k-mid';\n                        }\n                        return result;\n                    },\n                    textClass: function (item, isLink) {\n                        var result = 'k-in';\n                        if (isLink) {\n                            result += ' k-link';\n                        }\n                        if (item.enabled === false) {\n                            result += ' k-state-disabled';\n                        }\n                        if (item.selected === true) {\n                            result += ' k-state-selected';\n                        }\n                        return result;\n                    },\n                    toggleButtonClass: function (item) {\n                        var result = 'k-icon';\n                        if (item.expanded !== true) {\n                            result += ' k-i-expand';\n                        } else {\n                            result += ' k-i-collapse';\n                        }\n                        return result;\n                    },\n                    groupAttributes: function (group) {\n                        var attributes = '';\n                        if (!group.firstLevel) {\n                            attributes = 'role=\\'group\\'';\n                        }\n                        return attributes + (group.expanded !== true ? ' style=\\'display:none\\'' : '');\n                    },\n                    groupCssClass: function (group) {\n                        var cssClass = 'k-group';\n                        if (group.firstLevel) {\n                            cssClass += ' k-treeview-lines';\n                        }\n                        return cssClass;\n                    },\n                    dragClue: templateNoWith('#= data.treeview.template(data) #'),\n                    group: templateNoWith('<ul class=\\'#= data.r.groupCssClass(data.group) #\\'#= data.r.groupAttributes(data.group) #>' + '#= data.renderItems(data) #' + '</ul>'),\n                    itemContent: templateNoWith('# var imageUrl = ' + fieldAccessor('imageUrl') + '(data.item); #' + '# var spriteCssClass = ' + fieldAccessor('spriteCssClass') + '(data.item); #' + '# if (imageUrl) { #' + '<img class=\\'k-image\\' alt=\\'\\' src=\\'#= imageUrl #\\'>' + '# } #' + '# if (spriteCssClass) { #' + '<span class=\\'k-sprite #= spriteCssClass #\\' />' + '# } #' + '#= data.treeview.template(data) #'),\n                    itemElement: templateNoWith('# var item = data.item, r = data.r; #' + '# var url = ' + fieldAccessor('url') + '(item); #' + '<div class=\\'#= r.cssClass(data.group, item) #\\'>' + '# if (item.hasChildren) { #' + '<span class=\\'#= r.toggleButtonClass(item) #\\'/>' + '# } #' + '# if (data.treeview.checkboxes) { #' + '<span class=\\'k-checkbox-wrapper\\' role=\\'presentation\\'>' + '#= data.treeview.checkboxes.template(data) #' + '</span>' + '# } #' + '# var tag = url ? \\'a\\' : \\'span\\'; #' + '# var textAttr = url ? \\' href=\\\\\\'\\' + url + \\'\\\\\\'\\' : \\'\\'; #' + '<#=tag# class=\\'#= r.textClass(item, !!url) #\\'#= textAttr #>' + '#= r.itemContent(data) #' + '</#=tag#>' + '</div>'),\n                    item: templateNoWith('# var item = data.item, r = data.r; #' + '<li role=\\'treeitem\\' class=\\'#= r.wrapperCssClass(data.group, item) #\\' ' + kendo.attr('uid') + '=\\'#= item.uid #\\' ' + 'aria-selected=\\'#= item.selected ? \"true\" : \"false\" #\\' ' + '#=item.enabled === false ? \"aria-disabled=\\'true\\'\" : \\'\\'#' + '# if (item.expanded) { #' + 'data-expanded=\\'true\\' aria-expanded=\\'true\\'' + '# } #' + '>' + '#= r.itemElement(data) #' + '</li>'),\n                    loading: templateNoWith('<div class=\\'k-icon k-i-loading\\' /> #: data.messages.loading #'),\n                    retry: templateNoWith('#: data.messages.requestFailed # ' + '<button class=\\'k-button k-request-retry\\'>#: data.messages.retry #</button>')\n                };\n            },\n            items: function () {\n                return this.element.find('.k-item > div:first-child');\n            },\n            setDataSource: function (dataSource) {\n                var options = this.options;\n                options.dataSource = dataSource;\n                this._dataSource();\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    this.dataSource.one('change', $.proxy(this.updateIndeterminate, this, null));\n                }\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            _bindDataSource: function () {\n                this._refreshHandler = proxy(this.refresh, this);\n                this._errorHandler = proxy(this._error, this);\n                this.dataSource.bind(CHANGE, this._refreshHandler);\n                this.dataSource.bind(ERROR, this._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var dataSource = this.dataSource;\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, this._refreshHandler);\n                    dataSource.unbind(ERROR, this._errorHandler);\n                }\n            },\n            _dataSource: function (silentRead) {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                function recursiveRead(data) {\n                    for (var i = 0; i < data.length; i++) {\n                        data[i]._initChildren();\n                        data[i].children.fetch();\n                        recursiveRead(data[i].children.view());\n                    }\n                }\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                that._unbindDataSource();\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n                if (silentRead) {\n                    dataSource.fetch();\n                    recursiveRead(dataSource.view());\n                }\n                that._bindDataSource();\n            },\n            events: [\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n                DATABOUND,\n                EXPAND,\n                COLLAPSE,\n                SELECT,\n                CHANGE,\n                NAVIGATE,\n                CHECK\n            ],\n            options: {\n                name: 'TreeView',\n                dataSource: {},\n                animation: {\n                    expand: {\n                        effects: 'expand:vertical',\n                        duration: 200\n                    },\n                    collapse: { duration: 100 }\n                },\n                messages: {\n                    loading: 'Loading...',\n                    requestFailed: 'Request failed.',\n                    retry: 'Retry'\n                },\n                dragAndDrop: false,\n                checkboxes: false,\n                autoBind: true,\n                autoScroll: false,\n                loadOnDemand: true,\n                template: '',\n                dataTextField: null\n            },\n            _accessors: function () {\n                var that = this, options = that.options, i, field, textField, element = that.element;\n                for (i in bindings) {\n                    field = options[bindings[i]];\n                    textField = element.attr(kendo.attr(i + '-field'));\n                    if (!field && textField) {\n                        field = textField;\n                    }\n                    if (!field) {\n                        field = i;\n                    }\n                    if (!isArray(field)) {\n                        field = [field];\n                    }\n                    options[bindings[i]] = field;\n                }\n            },\n            _fieldAccessor: function (fieldName) {\n                var fieldBindings = this.options[bindings[fieldName]], count = fieldBindings.length, result = '(function(item) {';\n                if (count === 0) {\n                    result += 'return item[\\'' + fieldName + '\\'];';\n                } else {\n                    result += 'var levels = [' + $.map(fieldBindings, function (x) {\n                        return 'function(d){ return ' + kendo.expr(x) + '}';\n                    }).join(',') + '];';\n                    result += 'return levels[Math.min(item.level(), ' + count + '-1)](item)';\n                }\n                result += '})';\n                return result;\n            },\n            setOptions: function (options) {\n                Widget.fn.setOptions.call(this, options);\n                this._animation();\n                this._dragging();\n                this._templates();\n            },\n            _trigger: function (eventName, node) {\n                return this.trigger(eventName, { node: node.closest(NODE)[0] });\n            },\n            _setChecked: function (datasource, value) {\n                if (!datasource || !$.isFunction(datasource.view)) {\n                    return;\n                }\n                for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                    if (nodes[i].enabled !== false) {\n                        nodes[i].set(CHECKED, value);\n                    }\n                    if (nodes[i].children) {\n                        this._setChecked(nodes[i].children, value);\n                    }\n                }\n            },\n            _setIndeterminate: function (node) {\n                var group = subGroup(node), siblings, length, all = true, i;\n                if (!group.length) {\n                    return;\n                }\n                siblings = checkboxes(group.children());\n                length = siblings.length;\n                if (!length) {\n                    return;\n                } else if (length > 1) {\n                    for (i = 1; i < length; i++) {\n                        if (siblings[i].checked != siblings[i - 1].checked || siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                            all = false;\n                            break;\n                        }\n                    }\n                } else {\n                    all = !siblings[0].indeterminate;\n                }\n                return checkboxes(node).data(INDETERMINATE, !all).prop(INDETERMINATE, !all).prop(CHECKED, all && siblings[0].checked);\n            },\n            updateIndeterminate: function (node) {\n                node = node || this.wrapper;\n                var subnodes = subGroup(node).children();\n                var i;\n                var checkbox;\n                var dataItem;\n                if (subnodes.length) {\n                    for (i = 0; i < subnodes.length; i++) {\n                        this.updateIndeterminate(subnodes.eq(i));\n                    }\n                    checkbox = this._setIndeterminate(node);\n                    dataItem = this.dataItem(node);\n                    if (checkbox && checkbox.prop(CHECKED)) {\n                        dataItem.checked = true;\n                    } else {\n                        if (dataItem) {\n                            delete dataItem.checked;\n                        }\n                    }\n                }\n            },\n            _bubbleIndeterminate: function (node, skipDownward) {\n                if (!node.length) {\n                    return;\n                }\n                if (!skipDownward) {\n                    this.updateIndeterminate(node);\n                }\n                var parentNode = this.parent(node), checkbox;\n                if (parentNode.length) {\n                    this._setIndeterminate(parentNode);\n                    checkbox = parentNode.children('div').find('.k-checkbox-wrapper :checkbox');\n                    this._skip = true;\n                    if (checkbox.prop(INDETERMINATE) === false) {\n                        this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                    } else {\n                        this.dataItem(parentNode).set(CHECKED, false);\n                    }\n                    this._skip = false;\n                    this._bubbleIndeterminate(parentNode, true);\n                }\n            },\n            _checkboxChange: function (e) {\n                var checkbox = $(e.target);\n                var isChecked = checkbox.prop(CHECKED);\n                var node = checkbox.closest(NODE);\n                var dataItem = this.dataItem(node);\n                if (dataItem.checked != isChecked) {\n                    dataItem.set(CHECKED, isChecked);\n                    this._trigger(CHECK, node);\n                }\n            },\n            _toggleButtonClick: function (e) {\n                var node = $(e.currentTarget).closest(NODE);\n                if (node.is('[aria-disabled=\\'true\\']')) {\n                    return;\n                }\n                this.toggle(node);\n            },\n            _mousedown: function (e) {\n                var node = $(e.currentTarget).closest(NODE);\n                if (node.is('[aria-disabled=\\'true\\']')) {\n                    return;\n                }\n                this._clickTarget = node;\n                this.current(node);\n            },\n            _focusable: function (node) {\n                return node && node.length && node.is(':visible') && !node.find('.k-in:first').hasClass(DISABLED);\n            },\n            _focus: function () {\n                var current = this.select(), clickTarget = this._clickTarget;\n                if (kendo.support.touch) {\n                    return;\n                }\n                if (clickTarget && clickTarget.length) {\n                    current = clickTarget;\n                }\n                if (!this._focusable(current)) {\n                    current = this.current();\n                }\n                if (!this._focusable(current)) {\n                    current = this._nextVisible($());\n                }\n                this.current(current);\n            },\n            focus: function () {\n                var wrapper = this.wrapper, scrollContainer = wrapper[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                do {\n                    scrollContainer = scrollContainer.parentNode;\n                    if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                        containers.push(scrollContainer);\n                        offsets.push(scrollContainer.scrollTop);\n                    }\n                } while (scrollContainer != documentElement);\n                wrapper.focus();\n                for (i = 0; i < containers.length; i++) {\n                    containers[i].scrollTop = offsets[i];\n                }\n            },\n            _blur: function () {\n                this.current().find('.k-in:first').removeClass('k-state-focused');\n            },\n            _enabled: function (node) {\n                return !node.children('div').children('.k-in').hasClass(DISABLED);\n            },\n            parent: function (node) {\n                var wrapperRe = /\\bk-treeview\\b/, itemRe = /\\bk-item\\b/, result, skipSelf;\n                if (typeof node == STRING) {\n                    node = this.element.find(node);\n                }\n                if (!isDomElement(node)) {\n                    node = node[0];\n                }\n                skipSelf = itemRe.test(node.className);\n                do {\n                    node = node.parentNode;\n                    if (itemRe.test(node.className)) {\n                        if (skipSelf) {\n                            result = node;\n                        } else {\n                            skipSelf = true;\n                        }\n                    }\n                } while (!wrapperRe.test(node.className) && !result);\n                return $(result);\n            },\n            _nextVisible: function (node) {\n                var that = this, expanded = that._expanded(node), result;\n                function nextParent(node) {\n                    while (node.length && !node.next().length) {\n                        node = that.parent(node);\n                    }\n                    if (node.next().length) {\n                        return node.next();\n                    } else {\n                        return node;\n                    }\n                }\n                if (!node.length || !node.is(':visible')) {\n                    result = that.root.children().eq(0);\n                } else if (expanded) {\n                    result = subGroup(node).children().first();\n                    if (!result.length) {\n                        result = nextParent(node);\n                    }\n                } else {\n                    result = nextParent(node);\n                }\n                return result;\n            },\n            _previousVisible: function (node) {\n                var that = this, lastChild, result;\n                if (!node.length || node.prev().length) {\n                    if (node.length) {\n                        result = node.prev();\n                    } else {\n                        result = that.root.children().last();\n                    }\n                    while (that._expanded(result)) {\n                        lastChild = subGroup(result).children().last();\n                        if (!lastChild.length) {\n                            break;\n                        }\n                        result = lastChild;\n                    }\n                } else {\n                    result = that.parent(node) || node;\n                }\n                return result;\n            },\n            _keydown: function (e) {\n                var that = this, key = e.keyCode, target, focused = that.current(), expanded = that._expanded(focused), checkbox = focused.find('.k-checkbox-wrapper:first :checkbox'), rtl = kendo.support.isRtl(that.element);\n                if (e.target != e.currentTarget) {\n                    return;\n                }\n                if (!rtl && key == keys.RIGHT || rtl && key == keys.LEFT) {\n                    if (expanded) {\n                        target = that._nextVisible(focused);\n                    } else if (!focused.find('.k-in:first').hasClass(DISABLED)) {\n                        that.expand(focused);\n                    }\n                } else if (!rtl && key == keys.LEFT || rtl && key == keys.RIGHT) {\n                    if (expanded && !focused.find('.k-in:first').hasClass(DISABLED)) {\n                        that.collapse(focused);\n                    } else {\n                        target = that.parent(focused);\n                        if (!that._enabled(target)) {\n                            target = undefined;\n                        }\n                    }\n                } else if (key == keys.DOWN) {\n                    target = that._nextVisible(focused);\n                } else if (key == keys.UP) {\n                    target = that._previousVisible(focused);\n                } else if (key == keys.HOME) {\n                    target = that._nextVisible($());\n                } else if (key == keys.END) {\n                    target = that._previousVisible($());\n                } else if (key == keys.ENTER && !focused.find('.k-in:first').hasClass(DISABLED)) {\n                    if (!focused.find('.k-in:first').hasClass('k-state-selected')) {\n                        if (!that._trigger(SELECT, focused)) {\n                            that.select(focused);\n                        }\n                    }\n                } else if (key == keys.SPACEBAR && checkbox.length) {\n                    if (!focused.find('.k-in:first').hasClass(DISABLED)) {\n                        checkbox.prop(CHECKED, !checkbox.prop(CHECKED)).data(INDETERMINATE, false).prop(INDETERMINATE, false);\n                        that._checkboxChange({ target: checkbox });\n                    }\n                    target = focused;\n                }\n                if (target) {\n                    e.preventDefault();\n                    if (focused[0] != target[0]) {\n                        that._trigger(NAVIGATE, target);\n                        that.current(target);\n                    }\n                }\n            },\n            _keypress: function (e) {\n                var that = this;\n                var delay = 300;\n                var selectedNode = that._getSelectedNode();\n                var matchToSelect;\n                if (e.keyCode === keys.ENTER || e.keyCode === keys.SPACEBAR) {\n                    return;\n                }\n                if (!that._match) {\n                    that._match = '';\n                }\n                that._match += String.fromCharCode(e.keyCode);\n                clearTimeout(that._matchTimer);\n                that._matchTimer = setTimeout(function () {\n                    that._match = '';\n                }, delay);\n                matchToSelect = selectedNode && that._matchNextByText(Array.prototype.indexOf.call(this.element.find('.k-item'), selectedNode[0]), that._match);\n                if (!matchToSelect) {\n                    matchToSelect = that._matchNextByText(-1, that._match);\n                }\n                that.select(matchToSelect);\n            },\n            _matchNextByText: function (startIndex, text) {\n                return $(this.element).find('.k-in').filter(function (i, element) {\n                    return i > startIndex && $(element).is(':visible') && !$(element).hasClass(DISABLED) && $(element).text().toLowerCase().indexOf(text) === 0;\n                }).closest(NODE)[0];\n            },\n            _click: function (e) {\n                var that = this, node = $(e.currentTarget), contents = nodeContents(node.closest(NODE)), href = node.attr('href'), shouldNavigate;\n                if (href) {\n                    shouldNavigate = href == '#' || href.indexOf('#' + this.element.id + '-') >= 0;\n                } else {\n                    shouldNavigate = contents.length && !contents.children().length;\n                }\n                if (shouldNavigate) {\n                    e.preventDefault();\n                }\n                if (!node.hasClass('.k-state-selected') && !that._trigger(SELECT, node)) {\n                    that.select(node);\n                }\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, wrapper, root, wrapperClasses = 'k-widget k-treeview';\n                if (element.is('ul')) {\n                    wrapper = element.wrap('<div />').parent();\n                    root = element;\n                } else {\n                    wrapper = element;\n                    root = wrapper.children('ul').eq(0);\n                }\n                that.wrapper = wrapper.addClass(wrapperClasses);\n                that.root = root;\n            },\n            _getSelectedNode: function () {\n                return this.element.find('.k-state-selected').closest(NODE);\n            },\n            _group: function (item) {\n                var that = this, firstLevel = item.hasClass(KTREEVIEW), group = {\n                        firstLevel: firstLevel,\n                        expanded: firstLevel || that._expanded(item)\n                    }, groupElement = item.children('ul');\n                groupElement.addClass(that.templates.groupCssClass(group)).css('display', group.expanded ? '' : 'none');\n                that._nodes(groupElement, group);\n            },\n            _nodes: function (groupElement, groupData) {\n                var that = this, nodes = groupElement.children('li'), nodeData;\n                groupData = extend({ length: nodes.length }, groupData);\n                nodes.each(function (i, node) {\n                    node = $(node);\n                    nodeData = {\n                        index: i,\n                        expanded: that._expanded(node)\n                    };\n                    updateNodeHtml(node);\n                    that._updateNodeClasses(node, groupData, nodeData);\n                    that._group(node);\n                });\n            },\n            _checkboxes: function () {\n                var options = this.options;\n                var checkboxes = options.checkboxes;\n                var defaultTemplate;\n                if (checkboxes) {\n                    defaultTemplate = '<input type=\\'checkbox\\' tabindex=\\'-1\\' #= (item.enabled === false) ? \\'disabled\\' : \\'\\' # #= item.checked ? \\'checked\\' : \\'\\' #';\n                    if (checkboxes.name) {\n                        defaultTemplate += ' name=\\'' + checkboxes.name + '\\'';\n                    }\n                    defaultTemplate += ' id=\\'_#= item.uid #\\' class=\\'k-checkbox\\' /><span class=\\'k-checkbox-label checkbox-span\\'></span>';\n                    checkboxes = extend({ template: defaultTemplate }, options.checkboxes);\n                    if (typeof checkboxes.template == STRING) {\n                        checkboxes.template = template(checkboxes.template);\n                    }\n                    options.checkboxes = checkboxes;\n                }\n            },\n            _updateNodeClasses: function (node, groupData, nodeData) {\n                var wrapper = node.children('div'), group = node.children('ul'), templates = this.templates;\n                if (node.hasClass('k-treeview')) {\n                    return;\n                }\n                nodeData = nodeData || {};\n                nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n                nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n                nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children('.k-in').hasClass('k-state-disabled');\n                groupData = groupData || {};\n                groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n                groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n                node.removeClass('k-first k-last').addClass(templates.wrapperCssClass(groupData, nodeData));\n                wrapper.removeClass('k-top k-mid k-bot').addClass(templates.cssClass(groupData, nodeData));\n                var textWrap = wrapper.children('.k-in');\n                var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == 'a';\n                textWrap.removeClass('k-in k-link k-state-default k-state-disabled').addClass(templates.textClass(nodeData, isLink));\n                if (group.length || node.attr('data-hasChildren') == 'true') {\n                    wrapper.children('.k-icon').removeClass('k-i-expand k-i-collapse').addClass(templates.toggleButtonClass(nodeData));\n                    group.addClass('k-group');\n                }\n                this._checkboxAria(node);\n            },\n            _processNodes: function (nodes, callback) {\n                var that = this;\n                that.element.find(nodes).each(function (index, item) {\n                    callback.call(that, index, $(item).closest(NODE));\n                });\n            },\n            dataItem: function (node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr('uid')), dataSource = this.dataSource;\n                return dataSource && dataSource.getByUid(uid);\n            },\n            _insertNode: function (nodeData, index, parentNode, insertCallback, collapsed) {\n                var that = this, group = subGroup(parentNode), updatedGroupLength = group.children().length + 1, childrenData, groupData = {\n                        firstLevel: parentNode.hasClass(KTREEVIEW),\n                        expanded: !collapsed,\n                        length: updatedGroupLength\n                    }, node, i, item, nodeHtml = '', append = function (item, group) {\n                        item.appendTo(group);\n                    };\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n                    item.index = index + i;\n                    nodeHtml += that._renderItem({\n                        group: groupData,\n                        item: item\n                    });\n                }\n                node = $(nodeHtml);\n                if (!node.length) {\n                    return;\n                }\n                that.angular('compile', function () {\n                    return {\n                        elements: node.get(),\n                        data: nodeData.map(function (item) {\n                            return { dataItem: item };\n                        })\n                    };\n                });\n                if (!group.length) {\n                    group = $(that._renderGroup({ group: groupData })).appendTo(parentNode);\n                }\n                insertCallback(node, group);\n                if (parentNode.hasClass('k-item')) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode);\n                }\n                that._updateNodeClasses(node.prev().first());\n                that._updateNodeClasses(node.next().last());\n                that._checkboxAria(node);\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n                    if (item.hasChildren) {\n                        childrenData = item.children.data();\n                        if (childrenData.length) {\n                            that._insertNode(childrenData, item.index, node.eq(i), append, !that._expanded(node.eq(i)));\n                        }\n                    }\n                }\n                return node;\n            },\n            _checkboxAria: function (nodes) {\n                var text;\n                nodes.each(function (index, node) {\n                    node = $(node);\n                    text = node.find('.k-in:first').text();\n                    $(node).find('> div .k-checkbox-wrapper [type=checkbox]').attr(ARIALABEL, text);\n                });\n            },\n            _updateNodes: function (items, field) {\n                var that = this;\n                var i, node, nodeWrapper, item, isChecked, isCollapsed;\n                var context = {\n                    treeview: that.options,\n                    item: item\n                };\n                var render = field != 'expanded' && field != 'checked';\n                function setCheckedState(root, state) {\n                    root.find('.k-checkbox-wrapper :checkbox').not('[disabled]').prop(CHECKED, state).data(INDETERMINATE, false).prop(INDETERMINATE, false);\n                }\n                if (field == 'selected') {\n                    item = items[0];\n                    node = that.findByUid(item.uid).find('.k-in:first').removeClass('k-state-hover').toggleClass('k-state-selected', item[field]).end();\n                    if (item[field]) {\n                        that.current(node);\n                    }\n                    node.attr(ARIASELECTED, !!item[field]);\n                } else {\n                    var elements = $.map(items, function (item) {\n                        return that.findByUid(item.uid).children('div');\n                    });\n                    if (render) {\n                        that.angular('cleanup', function () {\n                            return { elements: elements };\n                        });\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        context.item = item = items[i];\n                        nodeWrapper = elements[i];\n                        node = nodeWrapper.parent();\n                        if (render) {\n                            nodeWrapper.children('.k-in').html(that.templates.itemContent(context));\n                        }\n                        if (field == CHECKED) {\n                            isChecked = item[field];\n                            setCheckedState(nodeWrapper, isChecked);\n                            if (that.options.checkboxes.checkChildren) {\n                                setCheckedState(node.children('.k-group'), isChecked);\n                                that._setChecked(item.children, isChecked);\n                                that._bubbleIndeterminate(node);\n                            }\n                        } else if (field == 'expanded') {\n                            that._toggle(node, item, item[field]);\n                        } else if (field == 'enabled') {\n                            node.find('.k-checkbox-wrapper :checkbox').prop('disabled', !item[field]);\n                            isCollapsed = !nodeContents(node).is(VISIBLE);\n                            node.removeAttr(ARIADISABLED);\n                            if (!item[field]) {\n                                if (item.selected) {\n                                    item.set('selected', false);\n                                }\n                                if (item.expanded) {\n                                    item.set('expanded', false);\n                                }\n                                isCollapsed = true;\n                                node.attr(ARIASELECTED, false).attr(ARIADISABLED, true);\n                            }\n                            that._updateNodeClasses(node, {}, {\n                                enabled: item[field],\n                                expanded: !isCollapsed\n                            });\n                        }\n                        if (nodeWrapper.length) {\n                            this.trigger('itemChange', {\n                                item: nodeWrapper,\n                                data: item,\n                                ns: ui\n                            });\n                        }\n                    }\n                    if (render) {\n                        that.angular('compile', function () {\n                            return {\n                                elements: elements,\n                                data: $.map(items, function (item) {\n                                    return [{ dataItem: item }];\n                                })\n                            };\n                        });\n                    }\n                }\n            },\n            _appendItems: function (index, items, parentNode) {\n                var group = subGroup(parentNode);\n                var children = group.children();\n                var collapsed = !this._expanded(parentNode);\n                if (this.element === parentNode) {\n                    index = this.dataSource.view().indexOf(items[0]);\n                } else if (items.length) {\n                    index = items[0].parent().indexOf(items[0]);\n                }\n                if (typeof index == UNDEFINED) {\n                    index = children.length;\n                }\n                this._insertNode(items, index, parentNode, function (item, group) {\n                    if (index >= children.length) {\n                        item.appendTo(group);\n                    } else {\n                        item.insertBefore(children.eq(index));\n                    }\n                }, collapsed);\n                if (this._expanded(parentNode)) {\n                    this._updateNodeClasses(parentNode);\n                    subGroup(parentNode).css('display', 'block');\n                }\n            },\n            _refreshChildren: function (parentNode, items, index) {\n                var i, children, child;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n                subGroup(parentNode).empty();\n                if (!items.length) {\n                    updateNodeHtml(parentNode);\n                } else {\n                    this._appendItems(index, items, parentNode);\n                    children = subGroup(parentNode).children();\n                    if (loadOnDemand && checkChildren) {\n                        this._bubbleIndeterminate(children.last());\n                    }\n                    for (i = 0; i < children.length; i++) {\n                        child = children.eq(i);\n                        this.trigger('itemChange', {\n                            item: child.children('div'),\n                            data: this.dataItem(child),\n                            ns: ui\n                        });\n                    }\n                }\n            },\n            _refreshRoot: function (items) {\n                var groupHtml = this._renderGroup({\n                    items: items,\n                    group: {\n                        firstLevel: true,\n                        expanded: true\n                    }\n                });\n                if (this.root.length) {\n                    this._angularItems('cleanup');\n                    var group = $(groupHtml);\n                    this.root.attr('class', group.attr('class')).html(group.html());\n                } else {\n                    this.root = this.wrapper.html(groupHtml).children('ul');\n                }\n                this.root.attr('role', 'tree');\n                var elements = this.root.children('.k-item');\n                for (var i = 0; i < items.length; i++) {\n                    this.trigger('itemChange', {\n                        item: elements.eq(i),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n                this._angularItems('compile');\n            },\n            refresh: function (e) {\n                var node = e.node;\n                var action = e.action;\n                var items = e.items;\n                var parentNode = this.wrapper;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n                var i;\n                if (this._skip) {\n                    return;\n                }\n                if (e.field) {\n                    if (!items[0] || !items[0].level) {\n                        return;\n                    }\n                    return this._updateNodes(items, e.field);\n                }\n                if (node) {\n                    parentNode = this.findByUid(node.uid);\n                    this._progress(parentNode, false);\n                }\n                if (checkChildren && action != 'remove') {\n                    var bubble = false;\n                    for (i = 0; i < items.length; i++) {\n                        if ('checked' in items[i]) {\n                            bubble = true;\n                            break;\n                        }\n                    }\n                    if (!bubble && node && node.checked) {\n                        for (i = 0; i < items.length; i++) {\n                            items[i].checked = true;\n                        }\n                    }\n                }\n                if (action == 'add') {\n                    this._appendItems(e.index, items, parentNode);\n                } else if (action == 'remove') {\n                    this._remove(this.findByUid(items[0].uid), false);\n                } else if (action == 'itemchange') {\n                    this._updateNodes(items);\n                } else if (action == 'itemloaded') {\n                    this._refreshChildren(parentNode, items, e.index);\n                } else {\n                    this._refreshRoot(items);\n                }\n                if (action != 'remove') {\n                    for (i = 0; i < items.length; i++) {\n                        if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                            items[i].load();\n                        }\n                    }\n                }\n                this.trigger(DATABOUND, { node: node ? parentNode : undefined });\n                if (this.options.checkboxes.checkChildren) {\n                    this.updateIndeterminate();\n                }\n            },\n            _error: function (e) {\n                var node = e.node && this.findByUid(e.node.uid);\n                var retryHtml = this.templates.retry({ messages: this.options.messages });\n                if (node) {\n                    this._progress(node, false);\n                    this._expanded(node, false);\n                    nodeIcon(node).addClass('k-i-reload');\n                    e.node.loaded(false);\n                } else {\n                    this._progress(false);\n                    this.element.html(retryHtml);\n                }\n            },\n            _retryRequest: function (e) {\n                e.preventDefault();\n                this.dataSource.fetch();\n            },\n            expand: function (nodes) {\n                this._processNodes(nodes, function (index, item) {\n                    this.toggle(item, true);\n                });\n            },\n            collapse: function (nodes) {\n                this._processNodes(nodes, function (index, item) {\n                    this.toggle(item, false);\n                });\n            },\n            enable: function (nodes, enable) {\n                if (typeof nodes === 'boolean') {\n                    enable = nodes;\n                    nodes = this.items();\n                } else {\n                    enable = arguments.length == 2 ? !!enable : true;\n                }\n                this._processNodes(nodes, function (index, item) {\n                    this.dataItem(item).set('enabled', enable);\n                });\n            },\n            current: function (node) {\n                var that = this, current = that._current, element = that.element, id = that._ariaId;\n                if (arguments.length > 0 && node && node.length) {\n                    if (current) {\n                        if (current[0].id === id) {\n                            current.removeAttr('id');\n                        }\n                        current.find('.k-in:first').removeClass('k-state-focused');\n                    }\n                    current = that._current = $(node, element).closest(NODE);\n                    current.find('.k-in:first').addClass('k-state-focused');\n                    id = current[0].id || id;\n                    if (id) {\n                        that.wrapper.removeAttr('aria-activedescendant');\n                        current.attr('id', id);\n                        that.wrapper.attr('aria-activedescendant', id);\n                    }\n                    return;\n                }\n                if (!current) {\n                    current = that._nextVisible($());\n                }\n                return current;\n            },\n            select: function (node) {\n                var that = this, element = that.element;\n                if (!arguments.length) {\n                    return element.find('.k-state-selected').closest(NODE);\n                }\n                node = $(node, element).closest(NODE);\n                element.find('.k-state-selected').each(function () {\n                    var dataItem = that.dataItem(this);\n                    if (dataItem) {\n                        dataItem.set('selected', false);\n                        delete dataItem.selected;\n                    } else {\n                        $(this).removeClass('k-state-selected');\n                    }\n                });\n                if (node.length) {\n                    that.dataItem(node).set('selected', true);\n                    that._clickTarget = node;\n                }\n                that.trigger(CHANGE);\n            },\n            _toggle: function (node, dataItem, expand) {\n                var options = this.options;\n                var contents = nodeContents(node);\n                var direction = expand ? 'expand' : 'collapse';\n                var loaded;\n                if (contents.data('animating')) {\n                    return;\n                }\n                loaded = dataItem && dataItem.loaded();\n                if (expand && !loaded) {\n                    if (options.loadOnDemand) {\n                        this._progress(node, true);\n                    }\n                    contents.remove();\n                    dataItem.load();\n                } else {\n                    this._updateNodeClasses(node, {}, { expanded: expand });\n                    if (!expand) {\n                        contents.css('height', contents.height()).css('height');\n                    }\n                    contents.kendoStop(true, true).kendoAnimate(extend({ reset: true }, options.animation[direction], {\n                        complete: function () {\n                            if (expand) {\n                                contents.css('height', '');\n                            }\n                        }\n                    }));\n                }\n            },\n            toggle: function (node, expand) {\n                node = $(node);\n                if (!nodeIcon(node).is('.k-i-expand, .k-i-collapse')) {\n                    return;\n                }\n                if (arguments.length == 1) {\n                    expand = !this._expanded(node);\n                }\n                this._expanded(node, expand);\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.wrapper.off(NS);\n                that._unbindDataSource();\n                if (that.dragging) {\n                    that.dragging.destroy();\n                }\n                kendo.destroy(that.element);\n                that.root = that.wrapper = that.element = null;\n            },\n            _expanded: function (node, value) {\n                var expandedAttr = kendo.attr('expanded');\n                var dataItem = this.dataItem(node);\n                var expanded = value;\n                var direction = expanded ? 'expand' : 'collapse';\n                if (arguments.length == 1) {\n                    return node.attr(expandedAttr) === 'true' || dataItem && dataItem.expanded;\n                }\n                if (nodeContents(node).data('animating')) {\n                    return;\n                }\n                if (!this._trigger(direction, node)) {\n                    if (dataItem) {\n                        dataItem.set('expanded', expanded);\n                        expanded = dataItem.expanded;\n                    }\n                    if (expanded) {\n                        node.attr(expandedAttr, 'true');\n                        node.attr('aria-expanded', 'true');\n                    } else {\n                        node.removeAttr(expandedAttr);\n                        node.attr('aria-expanded', 'false');\n                    }\n                }\n            },\n            _progress: function (node, showProgress) {\n                var element = this.element;\n                var loadingText = this.templates.loading({ messages: this.options.messages });\n                if (arguments.length == 1) {\n                    showProgress = node;\n                    if (showProgress) {\n                        element.html(loadingText);\n                    } else {\n                        element.empty();\n                    }\n                } else {\n                    nodeIcon(node).toggleClass('k-i-loading', showProgress).removeClass('k-i-reload');\n                }\n            },\n            text: function (node, text) {\n                var dataItem = this.dataItem(node), fieldBindings = this.options[bindings.text], level = dataItem.level(), length = fieldBindings.length, field = fieldBindings[Math.min(level, length - 1)];\n                if (text) {\n                    dataItem.set(field, text);\n                } else {\n                    return dataItem[field];\n                }\n            },\n            _objectOrSelf: function (node) {\n                return $(node).closest('[data-role=treeview]').data('kendoTreeView') || this;\n            },\n            _dataSourceMove: function (nodeData, group, parentNode, callback) {\n                var referenceDataItem, destTreeview = this._objectOrSelf(parentNode || group), destDataSource = destTreeview.dataSource;\n                var loadPromise = $.Deferred().resolve().promise();\n                if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                    referenceDataItem = destTreeview.dataItem(parentNode);\n                    if (!referenceDataItem.loaded()) {\n                        destTreeview._progress(parentNode, true);\n                        loadPromise = referenceDataItem.load();\n                    }\n                    if (parentNode != this.root) {\n                        destDataSource = referenceDataItem.children;\n                        if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                            referenceDataItem._initChildren();\n                            referenceDataItem.loaded(true);\n                            destDataSource = referenceDataItem.children;\n                        }\n                    }\n                }\n                nodeData = this._toObservableData(nodeData);\n                return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n            },\n            _toObservableData: function (node) {\n                var dataItem = node, dataSource, uid;\n                if (isJQueryInstance(node) || isDomElement(node)) {\n                    dataSource = this._objectOrSelf(node).dataSource;\n                    uid = $(node).attr(kendo.attr('uid'));\n                    dataItem = dataSource.getByUid(uid);\n                    if (dataItem) {\n                        dataItem = dataSource.remove(dataItem);\n                    }\n                }\n                return dataItem;\n            },\n            _insert: function (data, model, index) {\n                if (!(model instanceof kendo.data.ObservableArray)) {\n                    if (!isArray(model)) {\n                        model = [model];\n                    }\n                } else {\n                    model = model.toJSON();\n                }\n                var parentNode = data.parent();\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                data.splice.apply(data, [\n                    index,\n                    0\n                ].concat(model));\n                return this.findByUid(data[index].uid);\n            },\n            insertAfter: insertAction(1),\n            insertBefore: insertAction(0),\n            append: function (nodeData, parentNode, success) {\n                var group = this.root;\n                if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                    return;\n                }\n                parentNode = parentNode && parentNode.length ? parentNode : null;\n                if (parentNode) {\n                    group = subGroup(parentNode);\n                }\n                return this._dataSourceMove(nodeData, group, parentNode, function (dataSource, model, loadModel) {\n                    var inserted;\n                    var that = this;\n                    function add() {\n                        if (parentNode) {\n                            that._expanded(parentNode, true);\n                        }\n                        var data = dataSource.data(), index = Math.max(data.length, 0);\n                        return that._insert(data, model, index);\n                    }\n                    loadModel.done(function () {\n                        inserted = add();\n                        success = success || $.noop;\n                        success(inserted);\n                    });\n                    return inserted || null;\n                });\n            },\n            _remove: function (node, keepData) {\n                var that = this, parentNode, prevSibling, nextSibling;\n                node = $(node, that.element);\n                this.angular('cleanup', function () {\n                    return { elements: node.get() };\n                });\n                parentNode = node.parent().parent();\n                prevSibling = node.prev();\n                nextSibling = node.next();\n                node[keepData ? 'detach' : 'remove']();\n                if (parentNode.hasClass('k-item')) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode);\n                }\n                that._updateNodeClasses(prevSibling);\n                that._updateNodeClasses(nextSibling);\n                return node;\n            },\n            remove: function (node) {\n                var dataItem = this.dataItem(node);\n                if (dataItem) {\n                    this.dataSource.remove(dataItem);\n                }\n            },\n            detach: function (node) {\n                return this._remove(node, true);\n            },\n            findByText: function (text) {\n                return $(this.element).find('.k-in').filter(function (i, element) {\n                    return $(element).text() == text;\n                }).closest(NODE);\n            },\n            findByUid: function (uid) {\n                var items = this.element.find('.k-item');\n                var uidAttr = kendo.attr('uid');\n                var result;\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].getAttribute(uidAttr) == uid) {\n                        result = items[i];\n                        break;\n                    }\n                }\n                return $(result);\n            },\n            expandPath: function (path, complete) {\n                var treeview = this;\n                var nodeIds = path.slice(0);\n                var callback = complete || $.noop;\n                function proceed() {\n                    nodeIds.shift();\n                    if (nodeIds.length) {\n                        expand(nodeIds[0]).then(proceed);\n                    } else {\n                        callback.call(treeview);\n                    }\n                }\n                function expand(id) {\n                    var result = $.Deferred();\n                    var node = treeview.dataSource.get(id);\n                    if (node) {\n                        if (node.loaded()) {\n                            node.set('expanded', true);\n                            result.resolve();\n                        } else {\n                            treeview._progress(treeview.findByUid(node.uid), true);\n                            node.load().then(function () {\n                                node.set('expanded', true);\n                                result.resolve();\n                            });\n                        }\n                    } else {\n                        result.resolve();\n                    }\n                    return result.promise();\n                }\n                expand(nodeIds[0]).then(proceed);\n            },\n            _parentIds: function (node) {\n                var parent = node && node.parentNode();\n                var parents = [];\n                while (parent && parent.parentNode) {\n                    parents.unshift(parent.id);\n                    parent = parent.parentNode();\n                }\n                return parents;\n            },\n            expandTo: function (node) {\n                if (!(node instanceof kendo.data.Node)) {\n                    node = this.dataSource.get(node);\n                }\n                var parents = this._parentIds(node);\n                this.expandPath(parents);\n            },\n            _renderItem: function (options) {\n                if (!options.group) {\n                    options.group = {};\n                }\n                options.treeview = this.options;\n                options.r = this.templates;\n                return this.templates.item(options);\n            },\n            _renderGroup: function (options) {\n                var that = this;\n                options.renderItems = function (options) {\n                    var html = '', i = 0, items = options.items, len = items ? items.length : 0, group = options.group;\n                    group.length = len;\n                    for (; i < len; i++) {\n                        options.group = group;\n                        options.item = items[i];\n                        options.item.index = i;\n                        html += that._renderItem(options);\n                    }\n                    return html;\n                };\n                options.r = that.templates;\n                return that.templates.group(options);\n            }\n        });\n        ui.plugin(TreeView);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}