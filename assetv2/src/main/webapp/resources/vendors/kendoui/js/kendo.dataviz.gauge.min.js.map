{"version":3,"sources":["kendo.dataviz.gauge.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","undefined","_buildLabel","label","labelBox","textBox","children","border","background","elements","Group","wrapper","Path","fromRect","Rect","x1","y1","stroke","Text","Point","font","fill","color","styleGeometry","_pad","bbox","clone","padding","styleBox","dashType","lineJoin","lineCap","append","getRange","range","min","max","from","defined","MIN_VALUE","to","MAX_VALUE","math","origin","getOrigin","getSize","spacing","getSpacing","setOrigin","x","left","y","top","setSize","right","bottom","_unpad","ArrowLinearPointerAnimation","BarLinearPointerAnimation","Math","Widget","ui","dataviz","autoMajorUnit","ChartElement","NumericAxis","Axis","Box2D","isNumber","interpolateValue","limitValue","round","geo","geometry","draw","drawing","ANGULAR_SPEED","LINEAR_SPEED","ARROW","ARROW_POINTER","BAR_POINTER","BLACK","CAP_SIZE","COORD_PRECISION","Number","DEFAULT_HEIGHT","DEFAULT_LINE_WIDTH","DEFAULT_WIDTH","DEFAULT_MIN_WIDTH","DEFAULT_MIN_HEIGHT","DEFAULT_MARGIN","DEGREE","PI","GEO_ARC_ADJUST_ANGLE","INSIDE","LINEAR","NEEDLE","OUTSIDE","RADIAL_POINTER","X","Y","Pointer","scale","pointer","scaleOptions","fn","call","newValue","that","arguments","_oldValue","repaint","RadialPointer","shape","cap","arrow","animation","type","duration","setRadius","radius","clear","render","parent","center","setAngle","angle","transform","rotate","oldAngle","slotAngle","newAngle","transitions","RadialPointerAnimation","play","arc","startAngle","reverse","_renderNeedle","_renderCap","_renderArrow","reflow","getRadiusX","capSize","fromPoints","minorTickSize","minorTicks","needleColor","needlePath","moveTo","lineTo","close","capColor","circle","Circle","RadialScale","majorUnit","minorUnit","majorTicks","align","visible","endAngle","labels","position","renderArc","labelElements","renderLabels","ticks","renderTicks","ranges","renderRanges","repositionRanges","result","halfWidth","halfHeight","labelAngle","lp","cx","cy","isInside","lbl","labelPos","prevLabelPos","labelTransform","majorTickSize","tickAngles","count","labelsOptions","rangeDistance","rangeSize","labelsGroup","setRadiusX","setRadiusY","pointAt","cos","sin","translate","union","rangeRadius","newRadius","getRangeRadius","_geometry","segment","rangeGeom","segments","rangeSegments","segmentsCount","Arc","radiusX","radiusY","opacity","rangeSegment","j","gauge","defaultColor","rangePlaceholderColor","r","drawTicks","unit","tickOptions","tickStart","tickEnd","labelsPosition","allTicks","tickArc","majorTickAngles","_tickDifference","minorTickAngles","normalizeTickAngles","angles","skip","splice","ring","stepValue","pos","tickCount","step","positions","repositionTicks","minor","newPoint","xDiff","yDiff","diff","anchor","Transformation","Gauge","element","userOptions","themeOptions","themeName","theme","themes","destroy","empty","_originalOptions","toLowerCase","isArray","addClass","surface","_createSurface","redraw","plotArea","renderAs","gaugeArea","pointers","_setValueOptions","_draw","_visuals","exportVisual","allValues","values","concat","_resize","t","_getSize","_createGaugeArea","css","_createModel","_gaugeAreaMargin","areaGeometry","margin","wrap","appendTo","Surface","create","RadialGauge","radialGauge","notify","name","_initialPlotArea","fitScale","alignScale","_buildVisual","visuals","minDiff","midDiff","maxDiff","mid","oldDiff","plotAreaBox","abs","getDiff","staleFlag","getPlotBox","plotBbox","plotBox","plotBoxCenter","boxCenter","paddingX","paddingY","LinearGauge","linearGauge","vertical","bboxX","bboxY","bbox2D","_getBox","_alignElements","_shrinkElements","scaleElements","currentOptions","LinearScale","ArrowLinearPointer","BarLinearPointer","y2","x2","scaleBox","pointerBox","mirror","line","_alignLines","scaleLine","renderLine","scaleTicks","slot","slotX","slotY","getSlot","lineBox","linePath","tickPositions","skipUnit","tickLineOptions","tickX","tickY","renderAxisTick","getMajorTickPositions","getMinorTickPositions","start","end","tickPath","LinearPointer","track","pointerRangeBox","trackBox","trackSize","pointerHalfSize","space","pad","getElementOptions","_margin","pointerShape","halfSize","sign","setup","elementOptions","p2","p3","p4","dir","minSlot","axis","sizeAxis","p1","pointerPath","oldShape","oldPoints","newPoints","group","Animation","easing","anim","AnimationFactory","register","fromScale","toScale","distanceTo","translateX","translateY","speed","_set","setter","toUpperCase","points","plugin","ExportMixin"],"mappings":"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","file":"kendo.dataviz.gauge.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.gauge', [\n        'kendo.dataviz.core',\n        'kendo.drawing',\n        'kendo.dataviz.themes'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.gauge',\n        name: 'Gauge',\n        category: 'dataviz',\n        description: 'Radial and Linear gauges.',\n        depends: [\n            'dataviz.core',\n            'dataviz.themes'\n        ]\n    };\n    (function ($, undefined) {\n        var math = Math, kendo = window.kendo, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, autoMajorUnit = dataviz.autoMajorUnit, ChartElement = dataviz.ChartElement, NumericAxis = dataviz.NumericAxis, Axis = dataviz.Axis, Box2D = dataviz.Box2D, Class = kendo.Class, defined = dataviz.defined, isNumber = dataviz.isNumber, interpolateValue = dataviz.interpolateValue, getSpacing = dataviz.getSpacing, limitValue = dataviz.limitValue, round = dataviz.round, geo = dataviz.geometry, draw = dataviz.drawing, Point = geo.Point, Group = draw.Group, Path = draw.Path, Rect = geo.Rect, Text = draw.Text;\n        var ANGULAR_SPEED = 150, LINEAR_SPEED = 250, ARROW = 'arrow', ARROW_POINTER = 'arrowPointer', BAR_POINTER = 'barPointer', BLACK = '#000', CAP_SIZE = 0.05, COORD_PRECISION = dataviz.COORD_PRECISION, MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, DEFAULT_HEIGHT = 200, DEFAULT_LINE_WIDTH = 0.5, DEFAULT_WIDTH = 200, DEFAULT_MIN_WIDTH = 60, DEFAULT_MIN_HEIGHT = 60, DEFAULT_MARGIN = 5, DEGREE = math.PI / 180, GEO_ARC_ADJUST_ANGLE = 180, INSIDE = 'inside', LINEAR = 'linear', NEEDLE = 'needle', OUTSIDE = 'outside', RADIAL_POINTER = 'radialPointer', X = 'x', Y = 'y';\n        var Pointer = Class.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                var scaleOptions = scale.options;\n                ChartElement.fn.init.call(pointer, options);\n                options = pointer.options;\n                options.fill = options.color;\n                pointer.scale = scale;\n                if (defined(options.value)) {\n                    options.value = math.min(math.max(options.value, scaleOptions.min), scaleOptions.max);\n                } else {\n                    options.value = scaleOptions.min;\n                }\n            },\n            options: { color: BLACK },\n            value: function (newValue) {\n                var that = this;\n                var options = that.options;\n                var value = options.value;\n                var scaleOptions = that.scale.options;\n                if (arguments.length === 0) {\n                    return value;\n                }\n                options._oldValue = options._oldValue !== undefined ? options.value : scaleOptions.min;\n                options.value = math.min(math.max(newValue, scaleOptions.min), scaleOptions.max);\n                if (that.elements) {\n                    that.repaint();\n                }\n            }\n        });\n        var RadialPointer = Pointer.extend({\n            options: {\n                shape: NEEDLE,\n                cap: { size: CAP_SIZE },\n                arrow: {\n                    width: 16,\n                    height: 14\n                },\n                animation: {\n                    type: RADIAL_POINTER,\n                    duration: ANGULAR_SPEED\n                }\n            },\n            setRadius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.elements.clear();\n                    that.render(that.parent, that.center, radius);\n                }\n            },\n            setAngle: function (angle) {\n                this.elements.transform(geo.transform().rotate(angle, this.center));\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var oldAngle = scale.slotAngle(options._oldValue);\n                var newAngle = scale.slotAngle(options.value);\n                if (options.animation.transitions === false) {\n                    that.setAngle(newAngle);\n                } else {\n                    new RadialPointerAnimation(that.elements, deepExtend(options.animation, {\n                        oldAngle: oldAngle,\n                        newAngle: newAngle\n                    })).play();\n                }\n            },\n            render: function () {\n                var that = this;\n                var scale = that.scale;\n                var center = scale.arc.center;\n                var options = that.options;\n                var elements = new Group();\n                if (options.animation !== false) {\n                    deepExtend(options.animation, {\n                        startAngle: 0,\n                        center: center,\n                        reverse: scale.options.reverse\n                    });\n                }\n                if (options.shape === NEEDLE) {\n                    elements.append(that._renderNeedle(), that._renderCap());\n                } else {\n                    elements.append(that._renderArrow());\n                }\n                that.elements = elements;\n                that.setAngle(DEGREE);\n                return elements;\n            },\n            reflow: function (arc) {\n                var that = this;\n                var center = that.center = arc.center;\n                var length = limitValue(this.options.length || 1, 0.1, 1.5);\n                var radius = this.radius = arc.getRadiusX() * length;\n                var capSize = that.capSize = Math.round(radius * that.options.cap.size);\n                that.bbox = Rect.fromPoints(new Point(center.x - capSize, center.y - capSize), new Point(center.x + capSize, center.y + capSize));\n            },\n            _renderNeedle: function () {\n                var that = this;\n                var options = that.options;\n                var minorTickSize = that.scale.options.minorTicks.size;\n                var center = that.center;\n                var needleColor = options.color;\n                var needlePath = new Path({\n                    fill: { color: needleColor },\n                    stroke: {\n                        color: needleColor,\n                        width: DEFAULT_LINE_WIDTH\n                    }\n                });\n                needlePath.moveTo(center.x + that.radius - minorTickSize, center.y).lineTo(center.x, center.y - that.capSize / 2).lineTo(center.x, center.y + that.capSize / 2).close();\n                return needlePath;\n            },\n            _renderCap: function () {\n                var that = this;\n                var options = that.options;\n                var capColor = options.cap.color || options.color;\n                var circle = new geo.Circle(that.center, that.capSize);\n                var cap = new draw.Circle(circle, {\n                    fill: { color: capColor },\n                    stroke: { color: capColor }\n                });\n                return cap;\n            }\n        });\n        var RadialScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n                Axis.fn.init.call(scale, scale.options);\n            },\n            options: {\n                min: 0,\n                max: 100,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                startAngle: -30,\n                endAngle: 210,\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                }\n            },\n            render: function (center, radius) {\n                var that = this;\n                var arc = that.renderArc(center, radius);\n                that.bbox = arc.bbox();\n                that.labelElements = that.renderLabels();\n                that.ticks = that.renderTicks();\n                that.ranges = that.renderRanges();\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var center = bbox.center();\n                var radius = math.min(bbox.height(), bbox.width()) / 2;\n                if (that.bbox !== undefined) {\n                    that.bbox = that.arc.bbox();\n                    that.radius(that.arc.getRadiusX());\n                    that.repositionRanges();\n                    that.renderLabels();\n                } else {\n                    return that.render(center, radius);\n                }\n            },\n            slotAngle: function (value) {\n                var options = this.options;\n                var startAngle = options.startAngle;\n                var reverse = options.reverse;\n                var angle = options.endAngle - startAngle;\n                var min = options.min;\n                var max = options.max;\n                var result;\n                if (reverse) {\n                    result = options.endAngle - (value - min) / (max - min) * angle;\n                } else {\n                    result = (value - min) / (max - min) * angle + startAngle;\n                }\n                return result + GEO_ARC_ADJUST_ANGLE;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var arc = that.arc.clone();\n                var radius = arc.getRadiusX();\n                var tickAngles = that.tickAngles(arc, options.majorUnit);\n                var labels = that.labels;\n                var count = labels.length;\n                var labelsOptions = options.labels;\n                var padding = labelsOptions.padding;\n                var rangeDistance = radius * 0.05;\n                var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n                var ranges = options.ranges || [];\n                var halfWidth, halfHeight, labelAngle;\n                var angle, label, lp, i, cx, cy, isInside;\n                var labelsGroup = new Group();\n                var lbl, labelPos, prevLabelPos, labelTransform;\n                if (that.options.rangeDistance !== undefined) {\n                    rangeDistance = that.options.rangeDistance;\n                } else {\n                    that.options.rangeDistance = rangeDistance;\n                }\n                if (labelsOptions.position === INSIDE) {\n                    radius -= majorTickSize;\n                    if (ranges.length && that.labelElements === undefined) {\n                        radius -= rangeSize + rangeDistance;\n                    }\n                    arc.setRadiusX(radius).setRadiusY(radius);\n                }\n                for (i = 0; i < count; i++) {\n                    label = labels[i];\n                    halfWidth = label.box.width() / 2;\n                    halfHeight = label.box.height() / 2;\n                    angle = tickAngles[i];\n                    labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n                    isInside = labelsOptions.position === INSIDE;\n                    lp = arc.pointAt(angle);\n                    cx = lp.x + math.cos(labelAngle) * (halfWidth + padding) * (isInside ? 1 : -1);\n                    cy = lp.y + math.sin(labelAngle) * (halfHeight + padding) * (isInside ? 1 : -1);\n                    label.reflow(new dataviz.Box2D(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n                    labelPos = new Point(label.box.x1, label.box.y1);\n                    if (that.labelElements === undefined) {\n                        lbl = _buildLabel(label, options.labels);\n                        labelsGroup.append(lbl);\n                    } else {\n                        lbl = that.labelElements.children[i];\n                        prevLabelPos = lbl.bbox().origin;\n                        labelTransform = lbl.transform() || geo.transform();\n                        labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                        lbl.transform(labelTransform);\n                    }\n                    that.bbox = Rect.union(that.bbox, lbl.bbox());\n                }\n                return labelsGroup;\n            },\n            repositionRanges: function () {\n                var that = this;\n                var ranges = that.ranges.children;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var rangeRadius, newRadius;\n                if (ranges.length > 0) {\n                    rangeRadius = that.getRangeRadius();\n                    if (that.options.labels.position === INSIDE) {\n                        rangeRadius += rangeSize + rangeDistance;\n                    }\n                    newRadius = rangeRadius + rangeSize / 2;\n                    for (var i = 0; i < ranges.length; i++) {\n                        ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n                    }\n                    that.bbox = Rect.union(that.bbox, that.ranges.bbox());\n                }\n            },\n            renderRanges: function () {\n                var that = this;\n                var arc = that.arc;\n                var result = new Group();\n                var from, to;\n                var segments = that.rangeSegments();\n                var segmentsCount = segments.length;\n                var reverse = that.options.reverse;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var segment, rangeRadius, rangeGeom, i;\n                if (segmentsCount) {\n                    rangeRadius = that.getRangeRadius();\n                    that.radius(that.radius() - rangeSize - rangeDistance);\n                    for (i = 0; i < segmentsCount; i++) {\n                        segment = segments[i];\n                        from = that.slotAngle(segment[reverse ? 'to' : 'from']);\n                        to = that.slotAngle(segment[!reverse ? 'to' : 'from']);\n                        if (to - from !== 0) {\n                            rangeGeom = new geo.Arc(arc.center, {\n                                radiusX: rangeRadius + rangeSize / 2,\n                                radiusY: rangeRadius + rangeSize / 2,\n                                startAngle: from,\n                                endAngle: to\n                            });\n                            result.append(new draw.Arc(rangeGeom, {\n                                stroke: {\n                                    width: rangeSize,\n                                    color: segment.color,\n                                    opacity: segment.opacity\n                                }\n                            }));\n                        }\n                    }\n                }\n                return result;\n            },\n            rangeSegments: function () {\n                var gauge = this;\n                var options = gauge.options;\n                var ranges = options.ranges || [];\n                var count = ranges.length;\n                var range;\n                var segmentsCount;\n                var defaultColor = options.rangePlaceholderColor;\n                var segments = [];\n                var segment;\n                var min = options.min;\n                var max = options.max;\n                var i, j;\n                function rangeSegment(from, to, color, opacity) {\n                    return {\n                        from: from,\n                        to: to,\n                        color: color,\n                        opacity: opacity\n                    };\n                }\n                if (count) {\n                    segments.push(rangeSegment(min, max, defaultColor));\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        segmentsCount = segments.length;\n                        for (j = 0; j < segmentsCount; j++) {\n                            segment = segments[j];\n                            if (segment.from <= range.from && range.from <= segment.to) {\n                                segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n                                if (segment.from <= range.to && range.to <= segment.to) {\n                                    segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                                }\n                                segment.to = range.from;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return segments;\n            },\n            getRangeRadius: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var rangeSize = options.rangeSize;\n                var rangeDistance = options.rangeDistance;\n                var arc = that.arc;\n                var r;\n                if (options.labels.position === OUTSIDE) {\n                    r = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n                } else {\n                    r = arc.getRadiusX() - rangeSize;\n                }\n                return r;\n            },\n            renderArc: function (center, radius) {\n                var that = this;\n                var options = that.options;\n                var arc = that.arc = new geo.Arc(center, {\n                    radiusX: radius,\n                    radiusY: radius,\n                    startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n                    endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n                });\n                return arc;\n            },\n            renderTicks: function () {\n                var that = this;\n                var arc = that.arc;\n                var options = that.options;\n                var labelsPosition = options.labels.position;\n                var allTicks = new Group();\n                var majorTickSize = options.majorTicks.size;\n                var minorTickSize = options.minorTicks.size;\n                var tickArc = arc.clone();\n                var radius = tickArc.getRadiusX();\n                function drawTicks(arc, tickAngles, unit, tickOptions) {\n                    var ticks = new Group(), center = arc.center, radius = arc.getRadiusX(), i, tickStart, tickEnd, visible = tickOptions.visible;\n                    if (visible) {\n                        for (i = 0; i < tickAngles.length; i++) {\n                            tickStart = arc.pointAt(tickAngles[i]);\n                            tickEnd = new Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n                            ticks.append(new Path({\n                                stroke: {\n                                    color: tickOptions.color,\n                                    width: tickOptions.width\n                                }\n                            }).moveTo(tickStart).lineTo(tickEnd));\n                        }\n                    }\n                    return ticks;\n                }\n                that.majorTickAngles = that.tickAngles(arc, options.majorUnit);\n                that.majorTicks = drawTicks(tickArc, that.majorTickAngles, options.majorUnit, options.majorTicks);\n                allTicks.append(that.majorTicks);\n                that._tickDifference = majorTickSize - minorTickSize;\n                if (labelsPosition === OUTSIDE) {\n                    tickArc.setRadiusX(radius - majorTickSize + minorTickSize).setRadiusY(radius - majorTickSize + minorTickSize);\n                }\n                that.minorTickAngles = that.normalizeTickAngles(that.tickAngles(arc, options.minorUnit));\n                that.minorTicks = drawTicks(tickArc, that.minorTickAngles, options.minorUnit, options.minorTicks, options.majorUnit);\n                allTicks.append(that.minorTicks);\n                return allTicks;\n            },\n            normalizeTickAngles: function (angles) {\n                var that = this;\n                var options = that.options;\n                var skip = options.majorUnit / options.minorUnit;\n                for (var i = angles.length - 1; i >= 0; i--) {\n                    if (i % skip === 0) {\n                        angles.splice(i, 1);\n                    }\n                }\n                return angles;\n            },\n            tickAngles: function (ring, stepValue) {\n                var scale = this;\n                var options = scale.options;\n                var reverse = options.reverse;\n                var range = options.max - options.min;\n                var angle = ring.endAngle - ring.startAngle;\n                var pos = ring.startAngle;\n                var tickCount = range / stepValue;\n                var step = angle / tickCount;\n                var positions = [];\n                var i;\n                if (reverse) {\n                    pos += angle;\n                    step = -step;\n                }\n                for (i = 0; i < tickCount; i++) {\n                    positions.push(round(pos, COORD_PRECISION));\n                    pos += step;\n                }\n                if (round(pos) <= ring.endAngle) {\n                    positions.push(pos);\n                }\n                return positions;\n            },\n            radius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.arc.setRadiusX(radius).setRadiusY(radius);\n                    that.repositionTicks(that.majorTicks.children, that.majorTickAngles);\n                    that.repositionTicks(that.minorTicks.children, that.minorTickAngles, true);\n                } else {\n                    return that.arc.getRadiusX();\n                }\n            },\n            repositionTicks: function (ticks, tickAngles, minor) {\n                var that = this;\n                var diff = minor ? that._tickDifference || 0 : 0;\n                var tickArc = that.arc;\n                var radius = tickArc.getRadiusX();\n                if (minor && that.options.labels.position === OUTSIDE && diff !== 0) {\n                    tickArc = that.arc.clone();\n                    tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n                }\n                for (var i = 0; i < ticks.length; i++) {\n                    var newPoint = tickArc.pointAt(tickAngles[i]);\n                    var segments = ticks[i].segments;\n                    var xDiff = newPoint.x - segments[0].anchor().x;\n                    var yDiff = newPoint.y - segments[0].anchor().y;\n                    ticks[i].transform(new geo.Transformation().translate(xDiff, yDiff));\n                }\n            }\n        });\n        var Gauge = Widget.extend({\n            init: function (element, userOptions) {\n                var gauge = this;\n                var options;\n                var themeOptions;\n                var themeName;\n                var themes = dataviz.ui.themes || {};\n                var theme;\n                kendo.destroy(element);\n                $(element).empty();\n                Widget.fn.init.call(gauge, element);\n                gauge.wrapper = gauge.element;\n                gauge._originalOptions = deepExtend({}, userOptions);\n                options = deepExtend({}, gauge.options, userOptions);\n                themeName = options.theme;\n                theme = themes[themeName] || themes[themeName.toLowerCase()];\n                themeOptions = themeName && theme ? theme.gauge : {};\n                gauge.options = deepExtend({}, themeOptions, options);\n                if ($.isArray(options.pointer)) {\n                    for (var i = 0; i < options.pointer.length; i++) {\n                        gauge.options.pointer[i] = deepExtend({}, themeOptions.pointer, options.pointer[i]);\n                    }\n                }\n                gauge.element.addClass('k-gauge');\n                gauge.surface = gauge._createSurface();\n                gauge.redraw();\n            },\n            options: {\n                plotArea: {},\n                theme: 'default',\n                renderAs: '',\n                pointer: {},\n                scale: {},\n                gaugeArea: {}\n            },\n            destroy: function () {\n                this.surface.destroy();\n                Widget.fn.destroy.call(this);\n            },\n            value: function (value) {\n                var that = this;\n                var pointer = that.pointers[0];\n                if (arguments.length === 0) {\n                    return pointer.value();\n                }\n                pointer.value(value);\n                that._setValueOptions(value);\n            },\n            _draw: function () {\n                var surface = this.surface;\n                surface.clear();\n                surface.draw(this._visuals);\n            },\n            exportVisual: function () {\n                return this._visuals;\n            },\n            allValues: function (values) {\n                var that = this;\n                var pointers = that.pointers;\n                var allValues = [];\n                var i;\n                if (arguments.length === 0) {\n                    for (i = 0; i < pointers.length; i++) {\n                        allValues.push(pointers[i].value());\n                    }\n                    return allValues;\n                }\n                if ($.isArray(values)) {\n                    for (i = 0; i < values.length; i++) {\n                        if (isNumber(values[i])) {\n                            pointers[i].value(values[i]);\n                        }\n                    }\n                }\n                that._setValueOptions(values);\n            },\n            _setValueOptions: function (values) {\n                var pointers = [].concat(this.options.pointer);\n                values = [].concat(values);\n                for (var i = 0; i < values.length; i++) {\n                    pointers[i].value = values[i];\n                }\n            },\n            _resize: function () {\n                var that = this;\n                var t = that.options.transitions;\n                var i;\n                that.options.transitions = false;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = false;\n                }\n                that.redraw();\n                that.options.transitions = t;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = t;\n                }\n            },\n            redraw: function () {\n                var that = this;\n                var size = deepExtend(that._getSize(), that.options.gaugeArea);\n                var wrapper = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                var bbox;\n                that.surface.clear();\n                that.gaugeArea = that._createGaugeArea();\n                that.surface.element.css({\n                    width: size.width,\n                    height: size.height\n                });\n                that._createModel();\n                bbox = _unpad(wrapper.bbox(), that._gaugeAreaMargin);\n                that.reflow(bbox);\n            },\n            _createGaugeArea: function () {\n                var that = this;\n                var options = that.options.gaugeArea;\n                var size = that.surface.size();\n                var border = options.border || {};\n                var areaGeometry = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                that._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n                if (border.width > 0) {\n                    areaGeometry = _unpad(areaGeometry, border.width);\n                }\n                var gaugeArea = Path.fromRect(areaGeometry, {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType,\n                        lineJoin: 'round',\n                        lineCap: 'round'\n                    },\n                    fill: { color: options.background }\n                });\n                return gaugeArea;\n            },\n            _createSurface: function () {\n                var that = this;\n                var options = that.options;\n                var size = that._getSize();\n                size = options.gaugeArea ? deepExtend(size, options.gaugeArea) : size;\n                var wrap = $('<div></div>').appendTo(that.element).css({\n                    width: size.width,\n                    height: size.height\n                });\n                return new draw.Surface.create(wrap, { type: options.renderAs });\n            },\n            getSize: function () {\n                return this._getSize();\n            },\n            _getSize: function () {\n                var that = this;\n                var element = that.element;\n                var width = element.width();\n                var height = element.height();\n                if (!width) {\n                    width = DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = DEFAULT_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var RadialGauge = Gauge.extend({\n            init: function (element, options) {\n                var radialGauge = this;\n                Gauge.fn.init.call(radialGauge, element, options);\n                kendo.notify(radialGauge, dataviz.ui);\n            },\n            options: {\n                name: 'RadialGauge',\n                transitions: true,\n                gaugeArea: { background: '' }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                that.scale.reflow(bbox);\n                that._initialPlotArea = that.scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.scale.arc);\n                    that._initialPlotArea = Rect.union(that._initialPlotArea, pointers[i].bbox);\n                }\n                that.fitScale(bbox);\n                that.alignScale(bbox);\n                that._buildVisual(that.gaugeArea, pointers, that.scale);\n                that._draw();\n            },\n            _buildVisual: function (gaugeArea, pointers, scale) {\n                var visuals = new Group();\n                var current;\n                visuals.append(gaugeArea);\n                visuals.append(scale.ticks);\n                visuals.append(scale.ranges);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    current.render();\n                    visuals.append(current.elements);\n                    current.value(current.options.value);\n                }\n                visuals.append(scale.labelElements);\n                this._visuals = visuals;\n            },\n            fitScale: function (bbox) {\n                var that = this;\n                var scale = that.scale;\n                var arc = scale.arc;\n                var plotAreaBox = that._initialPlotArea;\n                var step = math.abs(that.getDiff(plotAreaBox, bbox));\n                var min = round(step, COORD_PRECISION);\n                var max = round(-step, COORD_PRECISION);\n                var minDiff, midDiff, maxDiff, mid, oldDiff;\n                var staleFlag = 0;\n                var i = 0;\n                while (i++ < 100) {\n                    staleFlag = oldDiff === maxDiff ? staleFlag + 1 : 0;\n                    if (staleFlag > 5) {\n                        break;\n                    }\n                    if (min != mid) {\n                        minDiff = that.getPlotBox(min, bbox, arc);\n                        if (0 <= minDiff && minDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (max != mid) {\n                        maxDiff = that.getPlotBox(max, bbox, arc);\n                        if (0 <= maxDiff && maxDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (minDiff > 0 && maxDiff > 0) {\n                        mid = min * 2;\n                    } else if (minDiff < 0 && maxDiff < 0) {\n                        mid = max * 2;\n                    } else {\n                        mid = round((min + max) / 2 || 1, COORD_PRECISION);\n                    }\n                    midDiff = that.getPlotBox(mid, bbox, arc);\n                    if (0 <= midDiff && midDiff <= 2) {\n                        break;\n                    }\n                    oldDiff = maxDiff;\n                    if (midDiff > 0) {\n                        max = mid;\n                        maxDiff = midDiff;\n                    } else {\n                        min = mid;\n                        minDiff = midDiff;\n                    }\n                }\n            },\n            getPlotBox: function (step, bbox, arc) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var radius = arc.getRadiusX();\n                arc = arc.clone();\n                arc.setRadiusX(radius + step).setRadiusY(radius + step);\n                scale.arc = arc;\n                scale.reflow(bbox);\n                that.plotBbox = scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(arc);\n                    that.plotBbox = Rect.union(that.plotBbox, pointers[i].bbox);\n                }\n                return that.getDiff(that.plotBbox, bbox);\n            },\n            getDiff: function (plotBox, box) {\n                return math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n            },\n            alignScale: function (bbox) {\n                var that = this;\n                var plotBoxCenter = that.plotBbox.center();\n                var boxCenter = bbox.center();\n                var paddingX = plotBoxCenter.x - boxCenter.x;\n                var paddingY = plotBoxCenter.y - boxCenter.y;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                scale.arc.center.x -= paddingX;\n                scale.arc.center.y -= paddingY;\n                scale.reflow(bbox);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(scale.arc);\n                    that.plotBbox = Rect.union(scale.bbox, pointers[i].bbox);\n                }\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new RadialScale(options.scale);\n                var current;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    current = new RadialPointer(scale, deepExtend({}, pointers[i], { animation: { transitions: options.transitions } }));\n                    that.pointers.push(current);\n                }\n            }\n        });\n        var LinearGauge = Gauge.extend({\n            init: function (element, options) {\n                var linearGauge = this;\n                Gauge.fn.init.call(linearGauge, element, options);\n                kendo.notify(linearGauge, dataviz.ui);\n            },\n            options: {\n                name: 'LinearGauge',\n                transitions: true,\n                gaugeArea: { background: '' },\n                scale: { vertical: true }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                var bboxX = bbox.origin.x;\n                var bboxY = bbox.origin.y;\n                var bbox2D = new dataviz.Box2D(bboxX, bboxY, bboxX + bbox.width(), bboxY + bbox.height());\n                that.scale.reflow(bbox2D);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow();\n                }\n                that.bbox = that._getBox(bbox2D);\n                that._alignElements();\n                that._shrinkElements();\n                that._buildVisual();\n                that._draw();\n            },\n            _buildVisual: function () {\n                var that = this;\n                var visuals = new Group();\n                var scaleElements = that.scale.render();\n                var pointers = that.pointers;\n                var current;\n                visuals.append(that.gaugeArea);\n                visuals.append(scaleElements);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    visuals.append(current.render());\n                    current.value(current.options.value);\n                }\n                that._visuals = visuals;\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new LinearScale(options.scale);\n                var current, currentOptions;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    currentOptions = deepExtend({}, pointers[i], { animation: { transitions: options.transitions } });\n                    if (currentOptions.shape === ARROW) {\n                        current = new ArrowLinearPointer(scale, currentOptions);\n                    } else {\n                        current = new BarLinearPointer(scale, currentOptions);\n                    }\n                    that.pointers.push(current);\n                }\n            },\n            _getSize: function () {\n                var gauge = this;\n                var element = gauge.element;\n                var width = element.width();\n                var height = element.height();\n                var vertical = gauge.options.scale.vertical;\n                if (!width) {\n                    width = vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            _getBox: function (box) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var boxCenter = box.center();\n                var plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n                var size;\n                for (var i = 0; i < pointers.length; i++) {\n                    plotAreaBox.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    size = plotAreaBox.width() / 2;\n                    plotAreaBox = new Box2D(boxCenter.x - size, box.y1, boxCenter.x + size, box.y2);\n                } else {\n                    size = plotAreaBox.height() / 2;\n                    plotAreaBox = new Box2D(box.x1, boxCenter.y - size, box.x2, boxCenter.y + size);\n                }\n                return plotAreaBox;\n            },\n            _alignElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box;\n                var box = pointers[0].box.clone().wrap(scale.box);\n                var plotAreaBox = that.bbox;\n                var diff, i;\n                for (i = 0; i < pointers.length; i++) {\n                    box.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    diff = plotAreaBox.center().x - box.center().x;\n                    scale.reflow(new Box2D(scaleBox.x1 + diff, plotAreaBox.y1, scaleBox.x2 + diff, plotAreaBox.y2));\n                } else {\n                    diff = plotAreaBox.center().y - box.center().y;\n                    scale.reflow(new Box2D(plotAreaBox.x1, scaleBox.y1 + diff, plotAreaBox.x2, scaleBox.y2 + diff));\n                }\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            },\n            _shrinkElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box.clone();\n                var pos = scale.options.vertical ? 'y' : 'x';\n                var pointerBox = pointers[0].box;\n                var i;\n                for (i = 0; i < pointers.length; i++) {\n                    pointerBox.wrap(pointers[i].box.clone());\n                }\n                scaleBox[pos + 1] += math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n                scaleBox[pos + 2] -= math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n                scale.reflow(scaleBox);\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            }\n        });\n        var LinearScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options = deepExtend({}, scale.options, { labels: { mirror: scale.options.mirror } });\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                Axis.fn.init.call(scale, scale.options);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n            },\n            options: {\n                min: 0,\n                max: 50,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                line: { width: DEFAULT_LINE_WIDTH },\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                },\n                mirror: false,\n                _alignLines: false\n            },\n            render: function () {\n                var that = this;\n                var elements = that.elements = new Group();\n                var labels = that.renderLabels();\n                var scaleLine = that.renderLine();\n                var scaleTicks = that.renderTicks();\n                var ranges = that.renderRanges();\n                elements.append(scaleLine, labels, scaleTicks, ranges);\n                return elements;\n            },\n            renderRanges: function () {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n                var ranges = options.ranges || [];\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var elements = new Group();\n                var count = ranges.length;\n                var rangeSize = options.rangeSize || options.minorTicks.size / 2;\n                var range, slot, slotX, slotY, i;\n                if (count) {\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        slot = that.getSlot(range.from, range.to);\n                        slotX = vertical ? that.lineBox() : slot;\n                        slotY = vertical ? slot : that.lineBox();\n                        if (vertical) {\n                            slotX.x1 -= rangeSize * (mirror ? -1 : 1);\n                        } else {\n                            slotY.y2 += rangeSize * (mirror ? -1 : 1);\n                        }\n                        elements.append(Path.fromRect(new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.x2 - slotX.x1,\n                            slotY.y2 - slotY.y1\n                        ]), {\n                            fill: {\n                                color: range.color,\n                                opacity: range.opacity\n                            },\n                            stroke: {}\n                        }));\n                    }\n                }\n                return elements;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var labels = that.labels;\n                var elements = new Group();\n                for (var i = 0; i < labels.length; i++) {\n                    elements.append(_buildLabel(labels[i], options.labels));\n                }\n                return elements;\n            },\n            renderLine: function () {\n                var that = this;\n                var options = that.options;\n                var line = options.line;\n                var lineBox = that.lineBox();\n                var linePath;\n                var elements = new Group();\n                if (line.width > 0 && line.visible) {\n                    linePath = new Path({\n                        stroke: {\n                            color: line.color,\n                            dashType: line.dashType,\n                            width: line.width\n                        }\n                    });\n                    linePath.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    elements.append(linePath);\n                }\n                return elements;\n            },\n            renderTicks: function () {\n                var that = this;\n                var ticks = new Group();\n                var options = that.options;\n                var lineBox = that.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = {\n                    _alignLines: options._alignLines,\n                    vertical: options.vertical\n                };\n                function render(tickPositions, tickOptions) {\n                    var i, count = tickPositions.length;\n                    if (tickOptions.visible) {\n                        for (i = tickOptions.skip; i < count; i += tickOptions.step) {\n                            if (i % tickOptions.skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            ticks.append(that.renderAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(that.getMajorTickPositions(), options.majorTicks);\n                render(that.getMinorTickPositions(), deepExtend({}, { skipUnit: majorUnit / options.minorUnit }, options.minorTicks));\n                return ticks;\n            },\n            renderAxisTick: function (options, tickOptions) {\n                var tickX = options.tickX;\n                var tickY = options.tickY;\n                var position = options.position;\n                var start, end, tickPath;\n                if (options.vertical) {\n                    start = new Point(tickX, position);\n                    end = new Point(tickX + tickOptions.size, position);\n                } else {\n                    start = new Point(position, tickY);\n                    end = new Point(position, tickY + tickOptions.size);\n                }\n                tickPath = new Path({\n                    stroke: {\n                        color: tickOptions.color,\n                        width: tickOptions.width\n                    }\n                }).moveTo(start).lineTo(end);\n                return tickPath;\n            }\n        });\n        var LinearPointer = Pointer.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                Pointer.fn.init.call(pointer, scale, options);\n                pointer.options = deepExtend({ track: { visible: defined(options.track) } }, pointer.options);\n            },\n            options: {\n                shape: BAR_POINTER,\n                track: { border: { width: 1 } },\n                color: BLACK,\n                border: { width: 1 },\n                opacity: 1,\n                margin: getSpacing(3),\n                animation: { type: BAR_POINTER },\n                visible: true\n            },\n            reflow: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var scaleLine = scale.lineBox();\n                var trackSize = options.track.size || options.size;\n                var pointerHalfSize = options.size / 2;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                var pointerBox, pointerRangeBox, trackBox;\n                space = mirror ? -space : space;\n                if (vertical) {\n                    trackBox = new Box2D(scaleLine.x1 + space, scaleLine.y1, scaleLine.x1 + space, scaleLine.y2);\n                    if (mirror) {\n                        trackBox.x1 -= trackSize;\n                    } else {\n                        trackBox.x2 += trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize, scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize);\n                        pointerBox = pointerRangeBox;\n                    }\n                } else {\n                    trackBox = new Box2D(scaleLine.x1, scaleLine.y1 - space, scaleLine.x2, scaleLine.y1 - space);\n                    if (mirror) {\n                        trackBox.y2 += trackSize;\n                    } else {\n                        trackBox.y1 -= trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space, scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space);\n                        pointerBox = pointerRangeBox;\n                    }\n                }\n                pointer.trackBox = trackBox;\n                pointer.pointerRangeBox = pointerRangeBox;\n                pointer.box = pointerBox || trackBox.clone().pad(options.border.width);\n            },\n            getElementOptions: function () {\n                var options = this.options;\n                return {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: defined(options.border) ? {\n                        color: options.border.width ? options.border.color || options.color : '',\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: options.opacity\n                    } : null\n                };\n            },\n            _margin: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                return space;\n            }\n        });\n        var ArrowLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.6;\n                }\n            },\n            pointerShape: function () {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var size = options.size;\n                var vertical = scale.options.vertical;\n                var halfSize = size / 2;\n                var sign = scale.options.mirror ? -1 : 1;\n                var reverse = scale.options.reverse;\n                var pos, shape;\n                if (vertical) {\n                    pos = reverse ? 'y2' : 'y1';\n                    shape = [\n                        new Point(0, 0 - halfSize),\n                        new Point(0 - sign * size, 0),\n                        new Point(0, 0 + halfSize)\n                    ];\n                } else {\n                    pos = reverse ? 'x1' : 'x2';\n                    shape = [\n                        new Point(0 - halfSize, 0),\n                        new Point(0, 0 + sign * size),\n                        new Point(0 + halfSize, 0)\n                    ];\n                }\n                return shape;\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var animation = new ArrowLinearPointerAnimation(that.elements, deepExtend(options.animation, {\n                    vertical: scale.options.vertical,\n                    mirror: scale.options.mirror,\n                    margin: that._margin(options.margin),\n                    from: scale.getSlot(options._oldValue),\n                    to: scale.getSlot(options.value)\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var options = that.options;\n                var elements = new Group();\n                var scale = that.scale;\n                var elementOptions = that.getElementOptions();\n                var shape = that.pointerShape(options.value);\n                options.animation.type = ARROW_POINTER;\n                elements = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n                var slot = scale.getSlot(options.value);\n                elements.transform(geo.transform().translate(slot.x1, slot.y1));\n                that.elements = elements;\n                return elements;\n            }\n        });\n        var BarLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.3;\n                }\n            },\n            pointerShape: function (value) {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var vertical = scale.options.vertical;\n                var mirror = scale.options.mirror;\n                var dir = mirror == vertical ? -1 : 1;\n                var size = options.size * dir;\n                var minSlot = scale.getSlot(scale.options.min);\n                var slot = scale.getSlot(value);\n                var axis = vertical ? Y : X;\n                var sizeAxis = vertical ? X : Y;\n                var margin = that._margin() * dir;\n                var p1 = new Point();\n                p1[axis] = minSlot[axis + '1'];\n                p1[sizeAxis] = minSlot[sizeAxis + '1'];\n                var p2 = new Point();\n                p2[axis] = slot[axis + '1'];\n                p2[sizeAxis] = slot[sizeAxis + '1'];\n                if (vertical) {\n                    p1.translate(margin, 0);\n                    p2.translate(margin, 0);\n                } else {\n                    p1.translate(0, margin);\n                    p2.translate(0, margin);\n                }\n                var p3 = p2.clone();\n                var p4 = p1.clone();\n                if (vertical) {\n                    p3.translate(size, 0);\n                    p4.translate(size, 0);\n                } else {\n                    p3.translate(0, size);\n                    p4.translate(0, size);\n                }\n                return [\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ];\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var shape = that.pointerShape(options.value);\n                var pointerPath = that.elements.children[0];\n                var oldShape = that.pointerShape(options._oldValue);\n                pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n                var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n                    reverse: scale.options.reverse,\n                    vertical: scale.options.vertical,\n                    oldPoints: [\n                        oldShape[1],\n                        oldShape[2]\n                    ],\n                    newPoints: [\n                        shape[1],\n                        shape[2]\n                    ]\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var group = new Group();\n                var elementOptions = that.getElementOptions();\n                var pointer = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                });\n                group.append(pointer);\n                that.elements = group;\n                return group;\n            }\n        });\n        var RadialPointerAnimation = draw.Animation.extend({\n            init: function (element, options) {\n                draw.Animation.fn.init.call(this, element, options);\n                options = this.options;\n                options.duration = math.max(math.abs(options.newAngle - options.oldAngle) / options.duration * 1000, 1);\n            },\n            options: {\n                easing: LINEAR,\n                duration: ANGULAR_SPEED\n            },\n            step: function (pos) {\n                var anim = this;\n                var options = anim.options;\n                var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n                anim.element.transform(geo.transform().rotate(angle, options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n        var ArrowLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                duration: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var margin = options.margin;\n                var from = options.from;\n                var to = options.to;\n                var axis = options.vertical ? 'x1' : 'y1';\n                if (options.mirror == options.vertical) {\n                    from[axis] -= margin;\n                    to[axis] -= margin;\n                } else {\n                    from[axis] += margin;\n                    to[axis] += margin;\n                }\n                var fromScale = this.fromScale = new Point(from.x1, from.y1);\n                var toScale = this.toScale = new Point(to.x1, to.y1);\n                if (options.duration !== 0) {\n                    options.duration = math.max(fromScale.distanceTo(toScale) / options.duration * 1000, 1);\n                }\n            },\n            step: function (pos) {\n                var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n                var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n                this.element.transform(geo.transform().translate(translateX, translateY));\n            }\n        });\n        draw.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n        var BarLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                speed: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var newPoints = options.newPoints;\n                var oldPoints = options.oldPoints;\n                var axis = this.axis = options.vertical ? Y : X;\n                var to = this.to = newPoints[0][axis];\n                var from = this.from = oldPoints[0][axis];\n                if (options.duration !== 0) {\n                    options.duration = math.max(math.abs(to - from) / options.speed * 1000, 1);\n                }\n                this._set(from);\n            },\n            step: function (pos) {\n                var value = interpolateValue(this.from, this.to, pos);\n                this._set(value);\n            },\n            _set: function (value) {\n                var setter = 'set' + this.axis.toUpperCase();\n                var points = this.options.newPoints;\n                points[0][setter](value);\n                points[1][setter](value);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR_POINTER, BarLinearPointerAnimation);\n        function _buildLabel(label, options) {\n            var labelBox = label.box;\n            var textBox = label.children[0].box;\n            var border = options.border || {};\n            var background = options.background || '';\n            var elements = new Group();\n            var styleBox, styleGeometry, wrapper;\n            wrapper = Path.fromRect(new Rect([\n                labelBox.x1,\n                labelBox.y1\n            ], [\n                labelBox.width(),\n                labelBox.height()\n            ]), { stroke: {} });\n            var text = new Text(label.text, new Point(textBox.x1, textBox.y1), {\n                font: options.font,\n                fill: { color: options.color }\n            });\n            styleGeometry = _pad(text.bbox().clone(), options.padding);\n            styleBox = Path.fromRect(styleGeometry, {\n                stroke: {\n                    color: border.width ? border.color : '',\n                    width: border.width,\n                    dashType: border.dashType,\n                    lineJoin: 'round',\n                    lineCap: 'round'\n                },\n                fill: { color: background }\n            });\n            elements.append(wrapper);\n            elements.append(styleBox);\n            elements.append(text);\n            return elements;\n        }\n        function getRange(range, min, max) {\n            var from = defined(range.from) ? range.from : MIN_VALUE;\n            var to = defined(range.to) ? range.to : MAX_VALUE;\n            range.from = math.max(math.min(to, from), min);\n            range.to = math.min(math.max(to, from), max);\n            return range;\n        }\n        function _pad(bbox, value) {\n            var origin = bbox.getOrigin();\n            var size = bbox.getSize();\n            var spacing = getSpacing(value);\n            bbox.setOrigin([\n                origin.x - spacing.left,\n                origin.y - spacing.top\n            ]);\n            bbox.setSize([\n                size.width + (spacing.left + spacing.right),\n                size.height + (spacing.top + spacing.bottom)\n            ]);\n            return bbox;\n        }\n        function _unpad(bbox, value) {\n            var spacing = getSpacing(value);\n            spacing.left = -spacing.left;\n            spacing.top = -spacing.top;\n            spacing.right = -spacing.right;\n            spacing.bottom = -spacing.bottom;\n            return _pad(bbox, spacing);\n        }\n        dataviz.ui.plugin(RadialGauge);\n        dataviz.ui.plugin(LinearGauge);\n        dataviz.ExportMixin.extend(Gauge.fn);\n        deepExtend(dataviz, {\n            Gauge: Gauge,\n            RadialPointer: RadialPointer,\n            LinearPointer: LinearPointer,\n            ArrowLinearPointer: ArrowLinearPointer,\n            BarLinearPointer: BarLinearPointer,\n            LinearScale: LinearScale,\n            RadialScale: RadialScale,\n            LinearGauge: LinearGauge,\n            RadialGauge: RadialGauge\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}